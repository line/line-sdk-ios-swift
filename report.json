{"coverage":0.8195725534308211,"targets":[{"name":"LineSDK.framework","coverage":0.8195725534308211,"files":[{"name":"API+Deprecated.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/API/API+Deprecated.swift","coverage":0,"type":"swift","functions":[{"name":"static API.refreshAccessToken(callbackQueue:completionHandler:)","coverage":0},{"name":"static API.revokeAccessToken(_:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.revokeRefreshToken(_:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.verifyAccessToken(_:callbackQueue:completionHandler:)","coverage":0}]},{"name":"ShareViewControllerDelegate.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/Public/ShareViewControllerDelegate.swift","coverage":0,"type":"swift","functions":[{"name":"ShareViewControllerDelegate.shareViewController(_:didFailLoadingListType:withError:)","coverage":0},{"name":"ShareViewControllerDelegate.shareViewControllerDidCancelSharing(_:)","coverage":0},{"name":"ShareViewControllerDelegate.shareViewController(_:didFailSendingMessages:toTargets:withError:)","coverage":0},{"name":"ShareViewControllerDelegate.shareViewController(_:didSendMessages:toTargets:)","coverage":0},{"name":"ShareViewControllerDelegate.shareViewController(_:messagesForSendingToTargets:)","coverage":0},{"name":"implicit closure #1 in ShareViewControllerDelegate.shareViewController(_:messagesForSendingToTargets:)","coverage":0},{"name":"ShareViewControllerDelegate.shareViewControllerShouldDismissAfterSending(_:)","coverage":0}]},{"name":"GetOpenChatRoomMembershipStateRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/OpenChat/Request/GetOpenChatRoomMembershipStateRequest.swift","coverage":0,"type":"swift","functions":[{"name":"GetOpenChatRoomMembershipStateRequest.State.init(from:)","coverage":0},{"name":"implicit closure #1 in GetOpenChatRoomMembershipStateRequest.State.init(from:)","coverage":0},{"name":"variable initialization expression of GetOpenChatRoomMembershipStateRequest.method","coverage":0},{"name":"GetOpenChatRoomMembershipStateRequest.path.getter","coverage":0},{"name":"variable initialization expression of GetOpenChatRoomMembershipStateRequest.authentication","coverage":0},{"name":"GetOpenChatRoomMembershipStateRequest.init(openChatId:)","coverage":0}]},{"name":"TemplateMessage.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/TemplateMessage.swift","coverage":0,"type":"swift","functions":[{"name":"variable initialization expression of TemplateMessage.type","coverage":0},{"name":"TemplateMessage.init(altText:payload:)","coverage":0},{"name":"TemplateMessage.message.getter","coverage":0}]},{"name":"PostOpenChatRoomJoinRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/OpenChat/Request/PostOpenChatRoomJoinRequest.swift","coverage":0,"type":"swift","functions":[{"name":"variable initialization expression of PostOpenChatRoomJoinRequest.method","coverage":0},{"name":"PostOpenChatRoomJoinRequest.path.getter","coverage":0},{"name":"variable initialization expression of PostOpenChatRoomJoinRequest.authentication","coverage":0},{"name":"PostOpenChatRoomJoinRequest.init(openChatId:displayName:)","coverage":0},{"name":"PostOpenChatRoomJoinRequest.prefixPipelines.getter","coverage":0},{"name":"PostOpenChatRoomJoinRequest.parameters.getter","coverage":0}]},{"name":"GetOpenChatRoomStatusRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/OpenChat/Request/GetOpenChatRoomStatusRequest.swift","coverage":0,"type":"swift","functions":[{"name":"GetOpenChatRoomStatusRequest.Status.init(from:)","coverage":0},{"name":"implicit closure #1 in GetOpenChatRoomStatusRequest.Status.init(from:)","coverage":0},{"name":"variable initialization expression of GetOpenChatRoomStatusRequest.method","coverage":0},{"name":"GetOpenChatRoomStatusRequest.path.getter","coverage":0},{"name":"variable initialization expression of GetOpenChatRoomStatusRequest.authentication","coverage":0},{"name":"GetOpenChatRoomStatusRequest.init(openChatId:)","coverage":0}]},{"name":"LoginResult.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/LoginResult.swift","coverage":0,"type":"swift","functions":[{"name":"LoginResult.encode(to:)","coverage":0}]},{"name":"Group.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Graph/Model/Group.swift","coverage":0,"type":"swift","functions":[{"name":"Group.pictureURLLarge.getter","coverage":0},{"name":"Group.pictureURLSmall.getter","coverage":0}]},{"name":"API.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/API/API.swift","coverage":0,"type":"swift","functions":[{"name":"static API.getProfile(callbackQueue:completionHandler:)","coverage":0},{"name":"static API.getProfile()","coverage":0},{"name":"closure #1 in static API.getProfile()","coverage":0},{"name":"closure #1 in closure #1 in static API.getProfile()","coverage":0},{"name":"static API.getBotFriendshipStatus(callbackQueue:completionHandler:)","coverage":0},{"name":"static API.getBotFriendshipStatus()","coverage":0},{"name":"closure #1 in static API.getBotFriendshipStatus()","coverage":0},{"name":"closure #1 in closure #1 in static API.getBotFriendshipStatus()","coverage":0}]},{"name":"OpenChatCreatingControllerDelegate.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/Public/OpenChatCreatingControllerDelegate.swift","coverage":0,"type":"swift","functions":[{"name":"OpenChatCreatingControllerDelegate.openChatCreatingController(_:didCreateChatRoom:withCreatingItem:)","coverage":0},{"name":"OpenChatCreatingControllerDelegate.openChatCreatingController(_:didFailWithError:withCreatingItem:presentingViewController:)","coverage":0},{"name":"OpenChatCreatingControllerDelegate.openChatCreatingController(_:shouldPreventUserTermAlertFrom:)","coverage":0},{"name":"OpenChatCreatingControllerDelegate.openChatCreatingControllerDidCancelCreating(_:)","coverage":0},{"name":"OpenChatCreatingControllerDelegate.openChatCreatingController(_:willPresentCreatingNavigationController:)","coverage":0}]},{"name":"GetOpenChatRoomJoinTypeRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/OpenChat/Request/GetOpenChatRoomJoinTypeRequest.swift","coverage":0,"type":"swift","functions":[{"name":"GetOpenChatRoomJoinTypeRequest.RoomType.init(from:)","coverage":0},{"name":"implicit closure #1 in GetOpenChatRoomJoinTypeRequest.RoomType.init(from:)","coverage":0},{"name":"variable initialization expression of GetOpenChatRoomJoinTypeRequest.method","coverage":0},{"name":"GetOpenChatRoomJoinTypeRequest.path.getter","coverage":0},{"name":"variable initialization expression of GetOpenChatRoomJoinTypeRequest.authentication","coverage":0},{"name":"GetOpenChatRoomJoinTypeRequest.init(openChatId:)","coverage":0}]},{"name":"UserProfile.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/Model/UserProfile.swift","coverage":0,"type":"swift","functions":[{"name":"UserProfile.pictureURLLarge.getter","coverage":0},{"name":"UserProfile.pictureURLSmall.getter","coverage":0}]},{"name":"FlexMessage.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/FlexMessage.swift","coverage":0,"type":"swift","functions":[{"name":"variable initialization expression of FlexMessage.type","coverage":0},{"name":"FlexMessage.init(altText:container:)","coverage":0},{"name":"FlexMessage.message.getter","coverage":0}]},{"name":"ImageDownloader.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Images/ImageDownloader.swift","coverage":0.04285714285714286,"type":"swift","functions":[{"name":"ImageDownloader.init()","coverage":1},{"name":"ImageDownloader.download(url:callbackQueue:completion:)","coverage":0},{"name":"closure #1 in ImageDownloader.download(url:callbackQueue:completion:)","coverage":0},{"name":"closure #1 in closure #1 in ImageDownloader.download(url:callbackQueue:completion:)","coverage":0},{"name":"closure #1 in closure #1 in closure #1 in ImageDownloader.download(url:callbackQueue:completion:)","coverage":0},{"name":"implicit closure #1 in closure #1 in ImageDownloader.download(url:callbackQueue:completion:)","coverage":0}]},{"name":"API+Internal.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/API/API+Internal.swift","coverage":0.0963855421686747,"type":"swift","functions":[{"name":"static API.getFriends(sort:pageToken:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.getApproversInFriends(pageToken:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.getGroups(pageToken:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.getApproversInGroup(groupID:pageToken:callbackQueue:completionHandler:)","coverage":0},{"name":"closure #1 in static API.getApproversInGroup(groupID:pageToken:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.sendMessages(_:to:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.multiSendMessages(_:to:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.getMessageSendingOneTimeToken(userIDs:callbackQueue:completionHander:)","coverage":0},{"name":"static API.getMessageSendingOneTimeToken(userIDs:)","coverage":1},{"name":"static API.multiSendMessages(_:withMessageToken:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.multiSendMessages(_:withMessageToken:)","coverage":1},{"name":"static API.getOpenChatRoomStatus(openChatId:callbackQueue:completionHandler:)","coverage":0},{"name":"closure #1 in static API.getOpenChatRoomStatus(openChatId:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.getOpenChatRoomMembershipState(openChatId:callbackQueue:completionHandler:)","coverage":0},{"name":"closure #1 in static API.getOpenChatRoomMembershipState(openChatId:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.getOpenChatRoomJoinType(openChatId:callbackQueue:completionHandler:)","coverage":0},{"name":"closure #1 in static API.getOpenChatRoomJoinType(openChatId:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.postOpenChatRoomJoin(openChatId:displayName:callbackQueue:completionHandler:)","coverage":0},{"name":"closure #1 in static API.postOpenChatRoomJoin(openChatId:displayName:callbackQueue:completionHandler:)","coverage":0}]},{"name":"DownloadableImageView.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Images/DownloadableImageView.swift","coverage":0.12280701754385964,"type":"swift","functions":[{"name":"DownloadableImageView.setImage(_:placeholder:completion:)","coverage":0.2692307692307692},{"name":"implicit closure #1 in DownloadableImageView.setImage(_:placeholder:completion:)","coverage":0},{"name":"closure #1 in DownloadableImageView.setImage(_:placeholder:completion:)","coverage":0},{"name":"closure #1 in closure #1 in DownloadableImageView.setImage(_:placeholder:completion:)","coverage":0}]},{"name":"User.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Graph/Model/User.swift","coverage":0.25,"type":"swift","functions":[{"name":"User.displayName.getter","coverage":1},{"name":"implicit closure #1 in User.displayName.getter","coverage":1},{"name":"User.pictureURLLarge.getter","coverage":0},{"name":"User.pictureURLSmall.getter","coverage":0}]},{"name":"ImageManager.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Images/ImageManager.swift","coverage":0.2602739726027397,"type":"swift","functions":[{"name":"SendableCache.object(forKey:)","coverage":0},{"name":"SendableCache.setObject(_:forKey:)","coverage":0},{"name":"SendableCache.removeAllObjects()","coverage":1},{"name":"variable initialization expression of ImageManager.currentToken","coverage":1},{"name":"ImageManager.nextToken()","coverage":0.75},{"name":"variable initialization expression of ImageManager.downloader","coverage":1},{"name":"ImageManager.().init()","coverage":1},{"name":"ImageManager.getImage(_:taskToken:callbackQueue:completion:)","coverage":0},{"name":"closure #1 in ImageManager.getImage(_:taskToken:callbackQueue:completion:)","coverage":0},{"name":"ImageManager.getImage(_:callbackQueue:completion:)","coverage":0},{"name":"closure #1 in ImageManager.getImage(_:callbackQueue:completion:)","coverage":0},{"name":"closure #2 in ImageManager.getImage(_:callbackQueue:completion:)","coverage":0},{"name":"closure #1 in closure #2 in ImageManager.getImage(_:callbackQueue:completion:)","coverage":0},{"name":"ImageManager.purgeCache()","coverage":1}]},{"name":"TemplateConfirmPayload.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Template/Payloads/TemplateConfirmPayload.swift","coverage":0.3125,"type":"swift","functions":[{"name":"variable initialization expression of TemplateConfirmPayload.type","coverage":1},{"name":"TemplateConfirmPayload.confirmAction.getter","coverage":0},{"name":"TemplateConfirmPayload.confirmAction.setter","coverage":0},{"name":"TemplateConfirmPayload.cancelAction.getter","coverage":0},{"name":"TemplateConfirmPayload.cancelAction.setter","coverage":0},{"name":"TemplateConfirmPayload.init(text:confirmAction:cancelAction:)","coverage":1},{"name":"TemplateConfirmPayload.setConfirmAction(_:)","coverage":0},{"name":"TemplateConfirmPayload.setCancelAction(_:)","coverage":0},{"name":"TemplateConfirmPayload.payload.getter","coverage":0}]},{"name":"LoginManagerOptions.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/LoginManagerOptions.swift","coverage":0.375,"type":"swift","functions":[{"name":"LoginManagerOptions.init(rawValue:)","coverage":1},{"name":"LoginManagerOptions.botPrompt.getter","coverage":0}]},{"name":"FlexIconComponent.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Component/FlexIconComponent.swift","coverage":0.38461538461538464,"type":"swift","functions":[{"name":"variable initialization expression of FlexIconComponent.type","coverage":1},{"name":"FlexIconComponent.init(url:)","coverage":1},{"name":"FlexIconComponent.init(url:margin:size:aspectRatio:)","coverage":0},{"name":"FlexIconComponent.component.getter","coverage":0}]},{"name":"FlexBoxComponent.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Component/FlexBoxComponent.swift","coverage":0.4,"type":"swift","functions":[{"name":"variable initialization expression of FlexBoxComponent.type","coverage":1},{"name":"FlexBoxComponent.init(layout:contents:)","coverage":1},{"name":"closure #1 in FlexBoxComponent.init(layout:contents:)","coverage":1},{"name":"FlexBoxComponent.init(layout:flex:spacing:margin:action:contents:)","coverage":0},{"name":"closure #1 in FlexBoxComponent.init(layout:flex:spacing:margin:action:contents:)","coverage":0},{"name":"FlexBoxComponent.addComponent(_:)","coverage":1},{"name":"FlexBoxComponent.removeFisrtComponent(where:)","coverage":0},{"name":"FlexBoxComponent.component.getter","coverage":1}]},{"name":"GetShareFriendsRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Graph/Request/GetShareFriendsRequest.swift","coverage":0.47368421052631576,"type":"swift","functions":[{"name":"GetShareFriendsRequest.init(sort:pageToken:)","coverage":1},{"name":"variable initialization expression of GetShareFriendsRequest.method","coverage":1},{"name":"variable initialization expression of GetShareFriendsRequest.path","coverage":1},{"name":"variable initialization expression of GetShareFriendsRequest.authentication","coverage":1},{"name":"GetShareFriendsRequest.parameters.getter","coverage":0},{"name":"GetShareFriendsRequest.sortParameter.getter","coverage":1},{"name":"GetShareFriendsRequest.Response.paginatedValues.getter","coverage":1}]},{"name":"AccessTokenVerifyResult.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/Model/AccessTokenVerifyResult.swift","coverage":0.5,"type":"swift","functions":[{"name":"AccessTokenVerifyResult.init(from:)","coverage":1},{"name":"AccessTokenVerifyResult.encode(to:)","coverage":0}]},{"name":"GetShareGroupsRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Graph/Request/GetShareGroupsRequest.swift","coverage":0.5,"type":"swift","functions":[{"name":"GetShareGroupsRequest.init(pageToken:)","coverage":1},{"name":"variable initialization expression of GetShareGroupsRequest.method","coverage":1},{"name":"variable initialization expression of GetShareGroupsRequest.path","coverage":1},{"name":"variable initialization expression of GetShareGroupsRequest.authentication","coverage":1},{"name":"GetShareGroupsRequest.parameters.getter","coverage":0},{"name":"GetShareGroupsRequest.Response.paginatedValues.getter","coverage":1}]},{"name":"FlexCarouselContainer.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Container/FlexCarouselContainer.swift","coverage":0.5,"type":"swift","functions":[{"name":"variable initialization expression of FlexCarouselContainer.type","coverage":1},{"name":"FlexCarouselContainer.init(contents:)","coverage":1},{"name":"FlexCarouselContainer.addBubble(_:)","coverage":1},{"name":"FlexCarouselContainer.removeFirstBubble(where:)","coverage":0},{"name":"FlexCarouselContainer.container.getter","coverage":0}]},{"name":"JWTCoder.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/JWT/JWTCoder.swift","coverage":0.5217391304347826,"type":"swift","functions":[{"name":"Base64JSONDecoder.decode&lt;A&gt;(_:from:)","coverage":0},{"name":"Base64JSONDecoder.decode&lt;A&gt;(_:from:)","coverage":0.8333333333333334},{"name":"Base64JSONDecoder.decodeDictionary(_:)","coverage":0.7}]},{"name":"PageViewController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/PageViewController/PageViewController.swift","coverage":0.5857988165680473,"type":"swift","functions":[{"name":"static PageViewController.Design.backgroundColor.getter","coverage":1},{"name":"variable initialization expression of PageViewController.pageContainerLayout","coverage":1},{"name":"PageViewController.pageTabView.getter","coverage":1},{"name":"closure #1 in closure #1 in PageViewController.pageTabView.getter","coverage":1},{"name":"PageViewController.pageViewController.getter","coverage":1},{"name":"PageViewController.pageScrollView.getter","coverage":1},{"name":"closure #1 in closure #1 in PageViewController.pageScrollView.getter","coverage":1},{"name":"PageViewController.init(pages:)","coverage":1},{"name":"PageViewController.init(coder:)","coverage":0},{"name":"implicit closure #1 in PageViewController.init(coder:)","coverage":0},{"name":"PageViewController.viewDidLoad()","coverage":1},{"name":"closure #1 in PageViewController.viewDidLoad()","coverage":1},{"name":"closure #1 in closure #1 in PageViewController.viewDidLoad()","coverage":1},{"name":"PageViewController.tabProgress.getter","coverage":0.8571428571428571},{"name":"PageViewController.setupPageViewController()","coverage":1},{"name":"closure #1 in PageViewController.setupPageViewController()","coverage":0.8333333333333334},{"name":"PageViewController.setupSubviews()","coverage":1},{"name":"PageViewController.setupLayouts()","coverage":1},{"name":"PageViewController.setPageTabViewHidden(_:)","coverage":0},{"name":"PageViewController.currentViewControllerIndex.getter","coverage":0},{"name":"PageViewController.indexForViewController(_:)","coverage":0},{"name":"closure #1 in PageViewController.indexForViewController(_:)","coverage":0},{"name":"PageViewController.pageViewController(_:viewControllerBefore:)","coverage":0},{"name":"PageViewController.pageViewController(_:viewControllerAfter:)","coverage":0},{"name":"PageViewController.pageTabView(_:didSelectIndex:)","coverage":0},{"name":"implicit closure #1 in PageViewController.pageTabView(_:didSelectIndex:)","coverage":0},{"name":"PageViewController.scrollViewDidEndScrollingAnimation(_:)","coverage":0},{"name":"PageViewController.scrollViewDidEndDecelerating(_:)","coverage":0},{"name":"PageViewController.scrollViewWillBeginDragging(_:)","coverage":0},{"name":"PageViewController.scrollViewDidEndDragging(_:willDecelerate:)","coverage":0},{"name":"PageViewController.setUserInteractionEnabled(_:)","coverage":0},{"name":"closure #1 in PageViewController.setUserInteractionEnabled(_:)","coverage":0}]},{"name":"PostRefreshTokenRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/Request/PostRefreshTokenRequest.swift","coverage":0.6363636363636364,"type":"swift","functions":[{"name":"variable initialization expression of PostRefreshTokenRequest.method","coverage":0},{"name":"variable initialization expression of PostRefreshTokenRequest.path","coverage":0},{"name":"variable initialization expression of PostRefreshTokenRequest.contentType","coverage":0},{"name":"variable initialization expression of PostRefreshTokenRequest.authentication","coverage":0},{"name":"PostRefreshTokenRequest.parameters.getter","coverage":1}]},{"name":"API+Auth.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/API/API+Auth.swift","coverage":0.6482412060301508,"type":"swift","functions":[{"name":"static API.Auth.refreshAccessToken(callbackQueue:completionHandler:)","coverage":1},{"name":"closure #1 in static API.Auth.refreshAccessToken(callbackQueue:completionHandler:)","coverage":1},{"name":"closure #2 in static API.Auth.refreshAccessToken(callbackQueue:completionHandler:)","coverage":0.8571428571428571},{"name":"static API.Auth.refreshAccessToken()","coverage":0},{"name":"closure #1 in static API.Auth.refreshAccessToken()","coverage":0},{"name":"closure #1 in closure #1 in static API.Auth.refreshAccessToken()","coverage":0},{"name":"static API.Auth.revokeAccessToken(_:callbackQueue:completionHandler:)","coverage":0.9032258064516129},{"name":"handleSuccessResult #1 @Sendable () in static API.Auth.revokeAccessToken(_:callbackQueue:completionHandler:)","coverage":1},{"name":"closure #1 in handleSuccessResult #1 @Sendable () in static API.Auth.revokeAccessToken(_:callbackQueue:completionHandler:)","coverage":1},{"name":"implicit closure #1 in static API.Auth.revokeAccessToken(_:callbackQueue:completionHandler:)","coverage":1},{"name":"closure #1 in static API.Auth.revokeAccessToken(_:callbackQueue:completionHandler:)","coverage":0},{"name":"closure #2 in static API.Auth.revokeAccessToken(_:callbackQueue:completionHandler:)","coverage":0.7647058823529411},{"name":"static API.Auth.revokeAccessToken(_:)","coverage":0},{"name":"closure #1 in static API.Auth.revokeAccessToken(_:)","coverage":0},{"name":"closure #1 in closure #1 in static API.Auth.revokeAccessToken(_:)","coverage":0},{"name":"static API.Auth.revokeRefreshToken(_:callbackQueue:completionHandler:)","coverage":0.9090909090909091},{"name":"handleSuccessResult #1 @Sendable () in static API.Auth.revokeRefreshToken(_:callbackQueue:completionHandler:)","coverage":1},{"name":"closure #1 in handleSuccessResult #1 @Sendable () in static API.Auth.revokeRefreshToken(_:callbackQueue:completionHandler:)","coverage":1},{"name":"implicit closure #1 in static API.Auth.revokeRefreshToken(_:callbackQueue:completionHandler:)","coverage":1},{"name":"closure #1 in static API.Auth.revokeRefreshToken(_:callbackQueue:completionHandler:)","coverage":0},{"name":"closure #2 in static API.Auth.revokeRefreshToken(_:callbackQueue:completionHandler:)","coverage":0.4117647058823529},{"name":"static API.Auth.revokeRefreshToken(_:)","coverage":0},{"name":"closure #1 in static API.Auth.revokeRefreshToken(_:)","coverage":0},{"name":"closure #1 in closure #1 in static API.Auth.revokeRefreshToken(_:)","coverage":0},{"name":"static API.Auth.verifyAccessToken(_:callbackQueue:completionHandler:)","coverage":0},{"name":"implicit closure #1 in static API.Auth.verifyAccessToken(_:callbackQueue:completionHandler:)","coverage":0},{"name":"closure #1 in static API.Auth.verifyAccessToken(_:callbackQueue:completionHandler:)","coverage":0},{"name":"static API.Auth.verifyAccessToken(_:)","coverage":0},{"name":"closure #1 in static API.Auth.verifyAccessToken(_:)","coverage":0},{"name":"closure #1 in closure #1 in static API.Auth.verifyAccessToken(_:)","coverage":0}]},{"name":"ShareTargetSelectingViewController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/TargetSelecting/ShareTargetSelectingViewController.swift","coverage":0.6582278481012658,"type":"swift","functions":[{"name":"ShareTargetSelectingViewController.init(store:columnIndex:)","coverage":0.9629629629629629},{"name":"implicit closure #1 in ShareTargetSelectingViewController.init(store:columnIndex:)","coverage":0},{"name":"ShareTargetSelectingViewController.init(coder:)","coverage":0},{"name":"implicit closure #1 in ShareTargetSelectingViewController.init(coder:)","coverage":0},{"name":"ShareTargetSelectingViewController.viewDidLoad()","coverage":1},{"name":"ShareTargetSelectingViewController.setupTableView()","coverage":1},{"name":"ShareTargetSelectingViewController.setupObservers()","coverage":1},{"name":"closure #1 in ShareTargetSelectingViewController.setupObservers()","coverage":0.7692307692307693},{"name":"implicit closure #1 in closure #1 in ShareTargetSelectingViewController.setupObservers()","coverage":0},{"name":"closure #1 in closure #1 in ShareTargetSelectingViewController.setupObservers()","coverage":1},{"name":"closure #2 in ShareTargetSelectingViewController.setupObservers()","coverage":0.7272727272727273},{"name":"implicit closure #1 in closure #2 in ShareTargetSelectingViewController.setupObservers()","coverage":0},{"name":"closure #1 in closure #2 in ShareTargetSelectingViewController.setupObservers()","coverage":1},{"name":"closure #3 in ShareTargetSelectingViewController.setupObservers()","coverage":0.7272727272727273},{"name":"implicit closure #1 in closure #3 in ShareTargetSelectingViewController.setupObservers()","coverage":0},{"name":"closure #1 in closure #3 in ShareTargetSelectingViewController.setupObservers()","coverage":1},{"name":"ShareTargetSelectingViewController.handleSelectingChange(index:)","coverage":1},{"name":"ShareTargetSelectingViewController.handleDataAppended(range:)","coverage":1},{"name":"ShareTargetSelectingViewController.traitCollectionDidChange(_:)","coverage":0.6},{"name":"ShareTargetSelectingViewController.tableView(_:numberOfRowsInSection:)","coverage":1},{"name":"ShareTargetSelectingViewController.tableView(_:cellForRowAt:)","coverage":1},{"name":"ShareTargetSelectingViewController.tableView(_:didSelectRowAt:)","coverage":0},{"name":"ShareTargetSelectingViewController.tableView(_:prefetchRowsAt:)","coverage":0},{"name":"closure #1 in ShareTargetSelectingViewController.tableView(_:prefetchRowsAt:)","coverage":0},{"name":"ShareTargetSelectingViewController.updateSearchResults(for:)","coverage":0},{"name":"ShareTargetSelectingViewController.searchBarShouldBeginEditing(_:)","coverage":0},{"name":"implicit closure #1 in ShareTargetSelectingViewController.searchBarShouldBeginEditing(_:)","coverage":0},{"name":"ShareTargetSelectingViewController.continueSearch()","coverage":1},{"name":"ShareTargetSelectingViewController.willPresentSearchController(_:)","coverage":0},{"name":"ShareTargetSelectingViewController.didPresentSearchController(_:)","coverage":0},{"name":"ShareTargetSelectingViewController.willDismissSearchController(_:)","coverage":0},{"name":"ShareTargetSelectingViewController.didDismissSearchController(_:)","coverage":0},{"name":"ShareTargetSelectingViewController.syncContentOffset(from:to:)","coverage":0}]},{"name":"OpenChatRoomCreatingItem.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/OpenChat/Model/OpenChatRoomCreatingItem.swift","coverage":0.6666666666666666,"type":"swift","functions":[{"name":"OpenChatRoomCreatingItem.init(form:)","coverage":1},{"name":"OpenChatRoomCreatingItem.init(name:roomDescription:creatorDisplayName:category:allowSearch:)","coverage":0},{"name":"OpenChatRoomCreatingItem.init(name:roomDescription:creatorDisplayName:category:allowSearch:)","coverage":1}]},{"name":"RSA.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/Algorithms/RSA.swift","coverage":0.6666666666666666,"type":"swift","functions":[{"name":"RSA.Algorithm.signatureAlgorithm.getter","coverage":1},{"name":"RSA.Algorithm.digestAlgorithm.getter","coverage":0},{"name":"RSA.Algorithm.encryptionAlgorithm.getter","coverage":1}]},{"name":"ShareTarget.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/Public/ShareTarget.swift","coverage":0.6666666666666666,"type":"swift","functions":[{"name":"User.targetID.getter","coverage":1},{"name":"User.avatarURL.getter","coverage":1},{"name":"Group.targetID.getter","coverage":0},{"name":"Group.displayName.getter","coverage":0},{"name":"Group.avatarURL.getter","coverage":0},{"name":"ShareTarget.placeholderImage.getter","coverage":1}]},{"name":"FlexFillerComponent.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Component/FlexFillerComponent.swift","coverage":0.6666666666666666,"type":"swift","functions":[{"name":"variable initialization expression of FlexFillerComponent.type","coverage":1},{"name":"FlexFillerComponent.init()","coverage":1},{"name":"FlexFillerComponent.component.getter","coverage":0}]},{"name":"Helpers.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/Helpers.swift","coverage":0.6702127659574468,"type":"swift","functions":[{"name":"static Log.assertionFailure(_:file:line:)","coverage":0},{"name":"implicit closure #1 in static Log.assertionFailure(_:file:line:)","coverage":0},{"name":"static Log.fatalError(_:file:line:)","coverage":0},{"name":"implicit closure #1 in static Log.fatalError(_:file:line:)","coverage":0},{"name":"static Log.precondition(_:_:file:line:)","coverage":0},{"name":"implicit closure #1 in static Log.precondition(_:_:file:line:)","coverage":0},{"name":"implicit closure #2 in static Log.precondition(_:_:file:line:)","coverage":0},{"name":"static Log.print(_:)","coverage":1},{"name":"closure #1 in static Log.print(_:)","coverage":1},{"name":"UIApplication.openLINEInAppStore()","coverage":0},{"name":"UIApplication.openLINEApp()","coverage":0},{"name":"UIView.safeLeadingAnchor.getter","coverage":1},{"name":"UIView.safeTrailingAnchor.getter","coverage":1},{"name":"UIViewController.safeTopAnchor.getter","coverage":1},{"name":"UIViewController.safeBottomAnchor.getter","coverage":1},{"name":"UIViewController.safeLeadingAnchor.getter","coverage":0},{"name":"UIViewController.safeTrailingAnchor.getter","coverage":0},{"name":"UIViewController.safeAreaInsets.getter","coverage":1},{"name":"UIViewController.addChild(_:to:)","coverage":1},{"name":"UIViewController.addChild(_:to:)","coverage":1},{"name":"UIViewController.expectedSearchBarHeight.getter","coverage":1},{"name":"UIView.addChildSubview(_:)","coverage":1},{"name":"guardSharedProperty&lt;A&gt;(_:)","coverage":0.7142857142857143},{"name":"implicit closure #1 in guardSharedProperty&lt;A&gt;(_:)","coverage":0},{"name":"static Constant.isLINEInstalled.getter","coverage":1}]},{"name":"GetFriendsRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Graph/Request/GetFriendsRequest.swift","coverage":0.6842105263157895,"type":"swift","functions":[{"name":"GetFriendsRequest.init(sort:pageToken:)","coverage":1},{"name":"variable initialization expression of GetFriendsRequest.method","coverage":1},{"name":"variable initialization expression of GetFriendsRequest.path","coverage":1},{"name":"variable initialization expression of GetFriendsRequest.authentication","coverage":1},{"name":"GetFriendsRequest.parameters.getter","coverage":0.6},{"name":"GetFriendsRequest.sortParameter.getter","coverage":0},{"name":"GetFriendsRequest.Response.paginatedValues.getter","coverage":0}]},{"name":"LoginManagerParameters.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/LoginManagerParameters.swift","coverage":0.6875,"type":"swift","functions":[{"name":"variable initialization expression of LoginManager.Parameters.onlyWebLogin","coverage":1},{"name":"variable initialization expression of LoginManager.Parameters.botPromptStyle","coverage":1},{"name":"variable initialization expression of LoginManager.Parameters.preferredWebPageLanguage","coverage":1},{"name":"variable initialization expression of LoginManager.Parameters.promptBotID","coverage":1},{"name":"variable initialization expression of LoginManager.Parameters.IDTokenNonce","coverage":1},{"name":"variable initialization expression of LoginManager.Parameters.allowRecreatingLoginProcess","coverage":1},{"name":"variable initialization expression of LoginManager.Parameters.initialWebAuthenticationMethod","coverage":1},{"name":"LoginManager.Parameters.init()","coverage":1},{"name":"LoginManager.Parameters.init(options:language:)","coverage":0},{"name":"LoginManager.WebPageLanguage.init(rawValue:)","coverage":1}]},{"name":"FlexMessageContainer.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Container/FlexMessageContainer.swift","coverage":0.7,"type":"swift","functions":[{"name":"FlexMessageContainer.init(from:)","coverage":0.9285714285714286},{"name":"FlexMessageContainer.encode(to:)","coverage":0.9},{"name":"implicit closure #1 in FlexMessageContainer.encode(to:)","coverage":0},{"name":"FlexMessageContainer.asBubbleContainer.getter","coverage":0.75},{"name":"FlexMessageContainer.asCarouselContainer.getter","coverage":0.75},{"name":"FlexMessageContainer.jsonString()","coverage":0},{"name":"FlexMessageContainer.container.getter","coverage":0}]},{"name":"Message.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Message.swift","coverage":0.7125,"type":"swift","functions":[{"name":"Message.init(from:)","coverage":0.8333333333333334},{"name":"Message.encode(to:)","coverage":0.85},{"name":"implicit closure #1 in Message.encode(to:)","coverage":0},{"name":"Message.asTextMessage.getter","coverage":0.75},{"name":"Message.asImageMessage.getter","coverage":0.75},{"name":"Message.asVideoMessage.getter","coverage":0.75},{"name":"Message.asAudioMessage.getter","coverage":0.75},{"name":"Message.asLocationMessage.getter","coverage":0.75},{"name":"Message.asTemplateMessage.getter","coverage":0},{"name":"Message.asFlexMessage.getter","coverage":0},{"name":"Message.message.getter","coverage":0}]},{"name":"TemplateCarouselPayload.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Template/Payloads/TemplateCarouselPayload.swift","coverage":0.72,"type":"swift","functions":[{"name":"TemplateCarouselPayload.Column.init(title:text:actions:defaultAction:thumbnailImageURL:imageBackgroundColor:)","coverage":1},{"name":"closure #1 in TemplateCarouselPayload.Column.init(title:text:actions:defaultAction:thumbnailImageURL:imageBackgroundColor:)","coverage":1},{"name":"TemplateCarouselPayload.Column.addAction(_:)","coverage":0},{"name":"TemplateCarouselPayload.Column.setDefaultAction(_:)","coverage":0},{"name":"variable initialization expression of TemplateCarouselPayload.type","coverage":1},{"name":"variable initialization expression of TemplateCarouselPayload.imageAspectRatio","coverage":1},{"name":"variable initialization expression of TemplateCarouselPayload.imageContentMode","coverage":1},{"name":"TemplateCarouselPayload.init(columns:)","coverage":1},{"name":"TemplateCarouselPayload.addColumn(_:)","coverage":1},{"name":"TemplateCarouselPayload.payload.getter","coverage":0}]},{"name":"GetApproversInGroupRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Graph/Request/GetApproversInGroupRequest.swift","coverage":0.7272727272727273,"type":"swift","functions":[{"name":"GetApproversInGroupRequest.init(groupID:pageToken:)","coverage":0.6666666666666666},{"name":"variable initialization expression of GetApproversInGroupRequest.method","coverage":1},{"name":"GetApproversInGroupRequest.path.getter","coverage":1},{"name":"variable initialization expression of GetApproversInGroupRequest.authentication","coverage":1},{"name":"GetApproversInGroupRequest.parameters.getter","coverage":0.7142857142857143},{"name":"GetApproversInGroupRequest.Response.paginatedValues.getter","coverage":0}]},{"name":"ShareTargetTableViewStyling.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/TargetSelecting/ShareTargetTableViewStyling.swift","coverage":0.7407407407407407,"type":"swift","functions":[{"name":"static ShareTargetTableViewDesign.separatorColor.getter","coverage":1},{"name":"implicit closure #1 in static ShareTargetTableViewDesign.separatorColor.getter","coverage":1},{"name":"implicit closure #2 in static ShareTargetTableViewDesign.separatorColor.getter","coverage":0},{"name":"static ShareTargetTableViewDesign.backgroundViewColor.getter","coverage":1},{"name":"ShareTargetTableViewStyling.setupTableViewStyle()","coverage":1},{"name":"ShareTargetTableViewStyling&lt;&gt;.popSelectingLimitAlert(max:)","coverage":0}]},{"name":"CallbackQueue.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/CallbackQueue.swift","coverage":0.7407407407407407,"type":"swift","functions":[{"name":"CallbackQueue.execute(_:)","coverage":0.7142857142857143},{"name":"closure #1 in CallbackQueue.execute(_:)","coverage":0},{"name":"closure #2 in CallbackQueue.execute(_:)","coverage":1},{"name":"closure #3 in CallbackQueue.execute(_:)","coverage":0},{"name":"closure #4 in CallbackQueue.execute(_:)","coverage":0},{"name":"OS_dispatch_queue.safeAsync(_:)","coverage":1},{"name":"implicit closure #1 in OS_dispatch_queue.safeAsync(_:)","coverage":1},{"name":"closure #1 in OS_dispatch_queue.safeAsync(_:)","coverage":1}]},{"name":"ECDSA.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/Algorithms/ECDSA.swift","coverage":0.75,"type":"swift","functions":[{"name":"ECDSA.Curve.signatureOctetLength.getter","coverage":0},{"name":"ECDSA.Curve.coordinateOctetLength.getter","coverage":0.8},{"name":"ECDSA.Algorithm.signatureAlgorithm.getter","coverage":1},{"name":"ECDSA.Algorithm.digestAlgorithm.getter","coverage":0},{"name":"ECDSA.Algorithm.encryptionAlgorithm.getter","coverage":0},{"name":"implicit closure #1 in ECDSA.Algorithm.encryptionAlgorithm.getter","coverage":0},{"name":"ECDSA.Algorithm.convertSignatureData(_:)","coverage":1},{"name":"ECDSA.Algorithm.DEREncodedSignatureData(_:)","coverage":0.9032258064516129},{"name":"implicit closure #1 in ECDSA.Algorithm.DEREncodedSignatureData(_:)","coverage":1}]},{"name":"MessageProtocols.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/MessageProtocols.swift","coverage":0.7692307692307693,"type":"swift","functions":[{"name":"TemplateMessageConvertible.messageWithAltText(_:)","coverage":0},{"name":"FlexMessageConvertible.messageWithAltText(_:)","coverage":0},{"name":"MessageActionContainer.setAction(_:)","coverage":1},{"name":"assertParameter(name:reason:unless:)","coverage":1},{"name":"assertHTTPSScheme(url:parameterName:)","coverage":1},{"name":"implicit closure #1 in assertHTTPSScheme(url:parameterName:)","coverage":1},{"name":"implicit closure #2 in assertHTTPSScheme(url:parameterName:)","coverage":1},{"name":"closure #1 in assertHTTPSScheme(url:parameterName:)","coverage":1}]},{"name":"OpenChatRoomNameTableViewCell.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/View/OpenChatRoomNameTableViewCell.swift","coverage":0.7727272727272727,"type":"swift","functions":[{"name":"variable initialization expression of OpenChatRoomNameTableViewCell.TextViewStyle.font","coverage":1},{"name":"variable initialization expression of OpenChatRoomNameTableViewCell.TextViewStyle.textColor","coverage":1},{"name":"variable initialization expression of OpenChatRoomNameTableViewCell.TextViewStyle.placeholderFont","coverage":1},{"name":"variable initialization expression of OpenChatRoomNameTableViewCell.TextViewStyle.placeholderColor","coverage":1},{"name":"variable initialization expression of OpenChatRoomNameTableViewCell.TextViewStyle.textCountLabelFont","coverage":1},{"name":"variable initialization expression of OpenChatRoomNameTableViewCell.TextViewStyle.textCountLabelColor","coverage":1},{"name":"variable initialization expression of OpenChatRoomNameTableViewCell.textView","coverage":1},{"name":"OpenChatRoomNameTableViewCell.init(coder:)","coverage":0},{"name":"implicit closure #1 in OpenChatRoomNameTableViewCell.init(coder:)","coverage":0},{"name":"OpenChatRoomNameTableViewCell.init(style:reuseIdentifier:)","coverage":1},{"name":"OpenChatRoomNameTableViewCell.setupSubviews()","coverage":1},{"name":"OpenChatRoomNameTableViewCell.setupLayouts()","coverage":1},{"name":"OpenChatRoomNameTableViewCell.tapped()","coverage":0}]},{"name":"OpenChatRoomInfoViewController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/ViewControllers/OpenChatRoomInfoViewController.swift","coverage":0.7735849056603774,"type":"swift","functions":[{"name":"static OpenChatRoomInfoViewController.Design.backgroundColor.getter","coverage":1},{"name":"variable initialization expression of OpenChatRoomInfoViewController.onClose","coverage":1},{"name":"variable initialization expression of OpenChatRoomInfoViewController.onNext","coverage":1},{"name":"variable initialization expression of OpenChatRoomInfoViewController.suggestedCategory","coverage":1},{"name":"variable initialization expression of OpenChatRoomInfoViewController.formItem","coverage":1},{"name":"OpenChatRoomInfoViewController.formItem.didset","coverage":0},{"name":"OpenChatRoomInfoViewController.roomName.getter","coverage":1},{"name":"closure #1 in closure #1 in OpenChatRoomInfoViewController.roomName.getter","coverage":0},{"name":"OpenChatRoomInfoViewController.roomDescription.getter","coverage":1},{"name":"closure #1 in closure #1 in OpenChatRoomInfoViewController.roomDescription.getter","coverage":0},{"name":"closure #2 in closure #1 in OpenChatRoomInfoViewController.roomDescription.getter","coverage":0},{"name":"OpenChatRoomInfoViewController.category.getter","coverage":1},{"name":"closure #1 in closure #1 in OpenChatRoomInfoViewController.category.getter","coverage":0},{"name":"closure #2 in closure #1 in OpenChatRoomInfoViewController.category.getter","coverage":0},{"name":"OpenChatRoomInfoViewController.enableSearch.getter","coverage":1},{"name":"closure #1 in closure #1 in OpenChatRoomInfoViewController.enableSearch.getter","coverage":0},{"name":"OpenChatRoomInfoViewController.sections.getter","coverage":1},{"name":"OpenChatRoomInfoViewController.viewDidLoad()","coverage":1},{"name":"OpenChatRoomInfoViewController.setupTableView()","coverage":1},{"name":"OpenChatRoomInfoViewController.setupNavigationBar()","coverage":1},{"name":"OpenChatRoomInfoViewController.closeForm()","coverage":0},{"name":"OpenChatRoomInfoViewController.nextPage()","coverage":0},{"name":"OpenChatRoomInfoViewController.updateViews()","coverage":1},{"name":"OpenChatRoomInfoViewController.numberOfSections(in:)","coverage":1},{"name":"OpenChatRoomInfoViewController.tableView(_:numberOfRowsInSection:)","coverage":1},{"name":"OpenChatRoomInfoViewController.tableView(_:cellForRowAt:)","coverage":1},{"name":"OpenChatRoomInfoViewController.tableView(_:viewForHeaderInSection:)","coverage":0},{"name":"OpenChatRoomInfoViewController.tableView(_:heightForHeaderInSection:)","coverage":1},{"name":"OpenChatRoomInfoViewController.tableView(_:viewForFooterInSection:)","coverage":1},{"name":"OpenChatRoomInfoViewController.tableView(_:heightForFooterInSection:)","coverage":1},{"name":"static OpenChatRoomInfoViewController.createViewController(_:)","coverage":1}]},{"name":"LoginManager.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/LoginManager.swift","coverage":0.7828947368421053,"type":"swift","functions":[{"name":"variable initialization expression of LoginManager.lock","coverage":1},{"name":"LoginManager.isSetupFinished.getter","coverage":1},{"name":"LoginManager.isAuthorized.getter","coverage":1},{"name":"LoginManager.isAuthorizing.getter","coverage":1},{"name":"variable initialization expression of LoginManager.setup","coverage":1},{"name":"LoginManager.().init()","coverage":1},{"name":"LoginManager.setup(channelID:universalLinkURL:)","coverage":0.875},{"name":"implicit closure #1 in LoginManager.setup(channelID:universalLinkURL:)","coverage":0},{"name":"LoginManager.login(permissions:in:parameters:completionHandler:)","coverage":0.796875},{"name":"implicit closure #1 in LoginManager.login(permissions:in:parameters:completionHandler:)","coverage":1},{"name":"implicit closure #2 in LoginManager.login(permissions:in:parameters:completionHandler:)","coverage":0},{"name":"implicit closure #3 in LoginManager.login(permissions:in:parameters:completionHandler:)","coverage":0},{"name":"closure #1 in LoginManager.login(permissions:in:parameters:completionHandler:)","coverage":1},{"name":"closure #1 in closure #1 in LoginManager.login(permissions:in:parameters:completionHandler:)","coverage":0.7},{"name":"closure #2 in LoginManager.login(permissions:in:parameters:completionHandler:)","coverage":1},{"name":"LoginManager.postLogin(token:response:process:)","coverage":0.8703703703703703},{"name":"closure #1 in LoginManager.postLogin(token:response:process:)","coverage":0.7777777777777778},{"name":"closure #1 in closure #1 in LoginManager.postLogin(token:response:process:)","coverage":1},{"name":"closure #2 in closure #1 in LoginManager.postLogin(token:response:process:)","coverage":0},{"name":"LoginManager.logout(completionHandler:)","coverage":1},{"name":"LoginManager.logout()","coverage":0},{"name":"LoginManager.application(_:open:options:)","coverage":0},{"name":"LoginManager.nonisolatedApplication(_:open:options:)","coverage":0},{"name":"variable initialization expression of LoginManager.preferredWebPageLanguage","coverage":1},{"name":"LoginManager.login(permissions:in:options:completionHandler:)","coverage":0},{"name":"LoginManager.getUserProfile(with:)","coverage":1},{"name":"LoginManager.getProviderMetadata(for:)","coverage":1},{"name":"LoginManager.verifyIDToken(_:providerMetadata:process:userID:currentDate:)","coverage":1}]},{"name":"LoginProcess.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/LoginProcess.swift","coverage":0.7853403141361257,"type":"swift","functions":[{"name":"LoginProcess.FlowParameters.botPrompt.getter","coverage":1},{"name":"LoginProcess.FlowParameters.preferredWebPageLanguage.getter","coverage":1},{"name":"LoginProcess.FlowParameters.onlyWebLogin.getter","coverage":1},{"name":"LoginProcess.FlowParameters.promptBotID.getter","coverage":1},{"name":"variable initialization expression of LoginProcess.AppSwitchingObserver.valid","coverage":1},{"name":"variable initialization expression of LoginProcess.AppSwitchingObserver.onTrigger","coverage":1},{"name":"LoginProcess.AppSwitchingObserver.init()","coverage":1},{"name":"LoginProcess.AppSwitchingObserver.startObserving()","coverage":1},{"name":"closure #1 in LoginProcess.AppSwitchingObserver.startObserving()","coverage":1},{"name":"closure #1 in closure #1 in LoginProcess.AppSwitchingObserver.startObserving()","coverage":1},{"name":"LoginProcess.appUniversalLinkFlow.didset","coverage":1},{"name":"implicit closure #1 in LoginProcess.appUniversalLinkFlow.didset","coverage":1},{"name":"LoginProcess.appAuthSchemeFlow.didset","coverage":1},{"name":"implicit closure #1 in LoginProcess.appAuthSchemeFlow.didset","coverage":1},{"name":"LoginProcess.webLoginFlow.didset","coverage":1},{"name":"implicit closure #1 in LoginProcess.webLoginFlow.didset","coverage":1},{"name":"variable initialization expression of LoginProcess.onSucceed","coverage":1},{"name":"variable initialization expression of LoginProcess.onFail","coverage":1},{"name":"LoginProcess.init(configuration:scopes:parameters:viewController:flowFactory:lineAvailabilityChecker:)","coverage":1},{"name":"implicit closure #1 in LoginProcess.init(configuration:scopes:parameters:viewController:flowFactory:lineAvailabilityChecker:)","coverage":1},{"name":"implicit closure #2 in LoginProcess.init(configuration:scopes:parameters:viewController:flowFactory:lineAvailabilityChecker:)","coverage":1},{"name":"LoginProcess.start()","coverage":1},{"name":"LoginProcess.stop()","coverage":1},{"name":"LoginProcess.setupAppSwitchingObserver()","coverage":1},{"name":"closure #1 in LoginProcess.setupAppSwitchingObserver()","coverage":0},{"name":"closure #1 in closure #1 in LoginProcess.setupAppSwitchingObserver()","coverage":0},{"name":"LoginProcess.startAppUniversalLinkFlow(_:)","coverage":1},{"name":"closure #1 in LoginProcess.startAppUniversalLinkFlow(_:)","coverage":1},{"name":"LoginProcess.startAppAuthSchemeFlow(_:)","coverage":1},{"name":"closure #1 in LoginProcess.startAppAuthSchemeFlow(_:)","coverage":1},{"name":"LoginProcess.startWebLoginFlow(_:)","coverage":1},{"name":"closure #1 in LoginProcess.startWebLoginFlow(_:)","coverage":1},{"name":"closure #2 in LoginProcess.startWebLoginFlow(_:)","coverage":0},{"name":"LoginProcess.canHandleURL(url:)","coverage":1},{"name":"implicit closure #1 in LoginProcess.canHandleURL(url:)","coverage":1},{"name":"LoginProcess.resumeOpenURL(url:)","coverage":0.9444444444444444},{"name":"closure #1 in LoginProcess.resumeOpenURL(url:)","coverage":0.875},{"name":"LoginProcess.nonisolatedResumeOpenURL(url:)","coverage":0},{"name":"closure #1 in LoginProcess.nonisolatedResumeOpenURL(url:)","coverage":0},{"name":"closure #2 in LoginProcess.nonisolatedResumeOpenURL(url:)","coverage":0},{"name":"closure #1 in closure #2 in LoginProcess.nonisolatedResumeOpenURL(url:)","coverage":0},{"name":"LoginProcess.exchangeToken(response:canRetryOnNetworkLost:)","coverage":1},{"name":"closure #1 in LoginProcess.exchangeToken(response:canRetryOnNetworkLost:)","coverage":1},{"name":"implicit closure #1 in closure #1 in LoginProcess.exchangeToken(response:canRetryOnNetworkLost:)","coverage":0},{"name":"implicit closure #2 in closure #1 in LoginProcess.exchangeToken(response:canRetryOnNetworkLost:)","coverage":1},{"name":"closure #1 in closure #1 in LoginProcess.exchangeToken(response:canRetryOnNetworkLost:)","coverage":1},{"name":"LoginProcess.canUseLineAuthV2.getter","coverage":1},{"name":"LoginProcess.resetFlows()","coverage":1},{"name":"LoginProcess.invokeSuccess(result:response:)","coverage":1},{"name":"LoginProcess.invokeFailure(error:)","coverage":1},{"name":"variable initialization expression of AppUniversalLinkFlow.onNext","coverage":1},{"name":"AppUniversalLinkFlow.init(parameter:applicationOpener:)","coverage":1},{"name":"AppUniversalLinkFlow.start()","coverage":1},{"name":"closure #1 in AppUniversalLinkFlow.start()","coverage":1},{"name":"variable initialization expression of AppAuthSchemeFlow.onNext","coverage":1},{"name":"AppAuthSchemeFlow.init(parameter:applicationOpener:)","coverage":1},{"name":"AppAuthSchemeFlow.start()","coverage":1},{"name":"closure #1 in AppAuthSchemeFlow.start()","coverage":1},{"name":"variable initialization expression of WebLoginFlow.onNext","coverage":1},{"name":"variable initialization expression of WebLoginFlow.onCancel","coverage":1},{"name":"WebLoginFlow.init(parameter:)","coverage":0.8181818181818182},{"name":"implicit closure #1 in WebLoginFlow.init(parameter:)","coverage":0},{"name":"WebLoginFlow.start(in:)","coverage":0.8823529411764706},{"name":"implicit closure #1 in WebLoginFlow.start(in:)","coverage":0},{"name":"closure #1 in WebLoginFlow.start(in:)","coverage":1},{"name":"WebLoginFlow.dismiss()","coverage":1},{"name":"WebLoginFlow.safariViewControllerDidFinish(_:)","coverage":0},{"name":"static String.returnUri(_:)","coverage":1},{"name":"closure #1 in static String.returnUri(_:)","coverage":1},{"name":"URL.appendedLoginQuery(_:)","coverage":1},{"name":"URL.appendedURLSchemeQuery(_:)","coverage":1},{"name":"static UIWindow.findKeyWindow()","coverage":0.42857142857142855},{"name":"closure #1 in static UIWindow.findKeyWindow()","coverage":1},{"name":"closure #2 in static UIWindow.findKeyWindow()","coverage":0},{"name":"static UIViewController.topMost.getter","coverage":0.7894736842105263}]},{"name":"GetGroupsRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Graph/Request/GetGroupsRequest.swift","coverage":0.7857142857142857,"type":"swift","functions":[{"name":"GetGroupsRequest.init(pageToken:)","coverage":1},{"name":"variable initialization expression of GetGroupsRequest.method","coverage":1},{"name":"variable initialization expression of GetGroupsRequest.path","coverage":1},{"name":"variable initialization expression of GetGroupsRequest.authentication","coverage":1},{"name":"GetGroupsRequest.parameters.getter","coverage":0.7142857142857143},{"name":"GetGroupsRequest.Response.paginatedValues.getter","coverage":0}]},{"name":"PostMessageSendingTokenIssueRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Request/PostMessageSendingTokenIssueRequest.swift","coverage":0.7857142857142857,"type":"swift","functions":[{"name":"PostMessageSendingTokenIssueRequest.init(userIDs:)","coverage":1},{"name":"variable initialization expression of PostMessageSendingTokenIssueRequest.method","coverage":1},{"name":"variable initialization expression of PostMessageSendingTokenIssueRequest.path","coverage":1},{"name":"variable initialization expression of PostMessageSendingTokenIssueRequest.authentication","coverage":1},{"name":"PostMessageSendingTokenIssueRequest.parameters.getter","coverage":1},{"name":"MessageSendingToken.init(value:)","coverage":0}]},{"name":"GetApproversInFriendsRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Graph/Request/GetApproversInFriendsRequest.swift","coverage":0.7857142857142857,"type":"swift","functions":[{"name":"GetApproversInFriendsRequest.init(pageToken:)","coverage":1},{"name":"variable initialization expression of GetApproversInFriendsRequest.method","coverage":1},{"name":"variable initialization expression of GetApproversInFriendsRequest.path","coverage":1},{"name":"variable initialization expression of GetApproversInFriendsRequest.authentication","coverage":1},{"name":"GetApproversInFriendsRequest.parameters.getter","coverage":0.7142857142857143},{"name":"GetApproversInFriendsRequest.Response.paginatedValues.getter","coverage":0}]},{"name":"PageTabView.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/PageViewController/PageTabView.swift","coverage":0.7867298578199052,"type":"swift","functions":[{"name":"static PageTabView.TabView.Design.titleColor.getter","coverage":1},{"name":"static PageTabView.TabView.Design.selectedTitleColor.getter","coverage":1},{"name":"static PageTabView.TabView.Design.titleFont.getter","coverage":1},{"name":"static PageTabView.TabView.Design.selectedTitleFont.getter","coverage":1},{"name":"static PageTabView.TabView.Design.height.getter","coverage":1},{"name":"PageTabView.TabView.init(title:index:)","coverage":1},{"name":"closure #1 in PageTabView.TabView.init(title:index:)","coverage":1},{"name":"PageTabView.TabView.init(coder:)","coverage":0},{"name":"implicit closure #1 in PageTabView.TabView.init(coder:)","coverage":0},{"name":"PageTabView.TabView.setupViews()","coverage":1},{"name":"PageTabView.TabView.isSelected.didset","coverage":1},{"name":"static PageTabView.Underline.Design.height.getter","coverage":1},{"name":"static PageTabView.Underline.Design.widthMargin.getter","coverage":1},{"name":"static PageTabView.Underline.Design.color.getter","coverage":1},{"name":"variable initialization expression of PageTabView.Underline.underline","coverage":1},{"name":"PageTabView.Underline.init()","coverage":1},{"name":"PageTabView.Underline.init(coder:)","coverage":0},{"name":"implicit closure #1 in PageTabView.Underline.init(coder:)","coverage":0},{"name":"PageTabView.Underline.setup(centerX:width:)","coverage":1},{"name":"static PageTabView.Underline.preferredWidth(progress:titleWidths:)","coverage":1},{"name":"implicit closure #1 in static PageTabView.Underline.preferredWidth(progress:titleWidths:)","coverage":1},{"name":"implicit closure #2 in static PageTabView.Underline.preferredWidth(progress:titleWidths:)","coverage":0},{"name":"closure #1 in static PageTabView.Underline.preferredWidth(progress:titleWidths:)","coverage":1},{"name":"static PageTabView.Underline.preferredCenterX(progress:tabWidth:countOfTabs:)","coverage":0.8},{"name":"PageTabView.underline.getter","coverage":1},{"name":"variable initialization expression of PageTabView.selectedIndex","coverage":1},{"name":"PageTabView.tabCenterSpacing.getter","coverage":0},{"name":"variable initialization expression of PageTabView.nextSpacingFactor","coverage":1},{"name":"variable initialization expression of PageTabView.tabs","coverage":1},{"name":"PageTabView.init(titles:)","coverage":1},{"name":"implicit closure #1 in PageTabView.init(titles:)","coverage":1},{"name":"implicit closure #2 in PageTabView.init(titles:)","coverage":0},{"name":"PageTabView.selectIndex(_:)","coverage":0},{"name":"PageTabView.tabIndex(from:)","coverage":0},{"name":"PageTabView.updateSelectedIndexForCurrentProgress()","coverage":0},{"name":"PageTabView.updateSelectedIndex(_:)","coverage":1},{"name":"closure #1 in PageTabView.updateSelectedIndex(_:)","coverage":1},{"name":"PageTabView.updateScrollingProgress(_:)","coverage":1},{"name":"closure #1 in PageTabView.updateScrollingProgress(_:)","coverage":1},{"name":"PageTabView.traitCollectionDidChange(_:)","coverage":1},{"name":"PageTabView.normalizeProgress(_:)","coverage":0.75},{"name":"variable initialization expression of PageTabView.currentProgress","coverage":1},{"name":"variable initialization expression of PageTabView.currentDiff","coverage":1},{"name":"PageTabView.tabViewTouchUpInside(_:)","coverage":0},{"name":"closure #1 in PageTabView.tabViewTouchUpInside(_:)","coverage":0},{"name":"PageTabView.init(coder:)","coverage":0},{"name":"implicit closure #1 in PageTabView.init(coder:)","coverage":0},{"name":"PageTabView.reset()","coverage":1}]},{"name":"PostExchangeTokenRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/Request/PostExchangeTokenRequest.swift","coverage":0.7894736842105263,"type":"swift","functions":[{"name":"variable initialization expression of PostExchangeTokenRequest.method","coverage":0},{"name":"variable initialization expression of PostExchangeTokenRequest.path","coverage":0},{"name":"variable initialization expression of PostExchangeTokenRequest.contentType","coverage":0},{"name":"variable initialization expression of PostExchangeTokenRequest.authentication","coverage":0},{"name":"PostExchangeTokenRequest.parameters.getter","coverage":1}]},{"name":"CryptoAlgorithm.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/CryptoAlgorithm.swift","coverage":0.7948717948717948,"type":"swift","functions":[{"name":"CryptoAlgorithm.length.getter","coverage":0},{"name":"CryptoAlgorithm.digest.getter","coverage":0},{"name":"CryptoAlgorithm.convertSignatureData(_:)","coverage":1},{"name":"Data.digest(using:)","coverage":0},{"name":"Data.digest(using:)","coverage":1},{"name":"closure #1 in Data.digest(using:)","coverage":1},{"name":"static Data.randomData(bytesCount:)","coverage":0.75},{"name":"closure #1 in static Data.randomData(bytesCount:)","coverage":0},{"name":"DigestAlgorithm.length.getter","coverage":1},{"name":"DigestAlgorithm.digest.getter","coverage":1}]},{"name":"FlexSpacerComponent.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Component/FlexSpacerComponent.swift","coverage":0.8,"type":"swift","functions":[{"name":"variable initialization expression of FlexSpacerComponent.type","coverage":1},{"name":"FlexSpacerComponent.init(size:)","coverage":1},{"name":"FlexSpacerComponent.component.getter","coverage":0}]},{"name":"LoginFlowFactory.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/LoginFlowFactory.swift","coverage":0.8,"type":"swift","functions":[{"name":"DefaultLINEAvailabilityChecker.isLINEInstalled.getter","coverage":1},{"name":"DefaultLoginFlowFactory.init(applicationOpener:)","coverage":1},{"name":"DefaultLoginFlowFactory.createAppUniversalLinkFlow(parameter:)","coverage":1},{"name":"DefaultLoginFlowFactory.createAppAuthSchemeFlow(parameter:)","coverage":0},{"name":"DefaultLoginFlowFactory.createWebLoginFlow(parameter:)","coverage":1}]},{"name":"ResourceLoading.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/ResourceLoading.swift","coverage":0.8,"type":"swift","functions":[{"name":"static Localization.string(_:)","coverage":1},{"name":"UIImage.init(bundleNamed:compatibleWith:)","coverage":1},{"name":"closure #1 in variable initialization expression of static NSBundle.frameworkResourceBundle","coverage":0.7777777777777778},{"name":"implicit closure #1 in closure #1 in variable initialization expression of static NSBundle.frameworkResourceBundle","coverage":0},{"name":"closure #1 in variable initialization expression of static NSBundle.frameworkBundle","coverage":1}]},{"name":"TemplateButtonsPayload.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Template/Payloads/TemplateButtonsPayload.swift","coverage":0.8,"type":"swift","functions":[{"name":"variable initialization expression of TemplateButtonsPayload.type","coverage":1},{"name":"TemplateButtonsPayload.init(title:text:defaultAction:thumbnailImageURL:imageAspectRatio:imageContentMode:imageBackgroundColor:sender:actions:)","coverage":1},{"name":"closure #1 in TemplateButtonsPayload.init(title:text:defaultAction:thumbnailImageURL:imageAspectRatio:imageContentMode:imageBackgroundColor:sender:actions:)","coverage":1},{"name":"TemplateButtonsPayload.addAction(_:)","coverage":1},{"name":"TemplateButtonsPayload.setDefaultAction(_:)","coverage":0},{"name":"TemplateButtonsPayload.payload.getter","coverage":0}]},{"name":"CryptoHelpers.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/CryptoHelpers.swift","coverage":0.8037974683544303,"type":"swift","functions":[{"name":"Data.x509HeaderStripped(earlyTerminator:)","coverage":0.725},{"name":"Data.x509HeaderStrippedForEC()","coverage":1},{"name":"Data.x509HeaderStrippedForRSA()","coverage":1},{"name":"SecKeyRef.KeyClass.name.getter","coverage":1},{"name":"SecKeyRef.KeyType.name.getter","coverage":1},{"name":"static SecKeyRef.createKey(derData:keyClass:keyType:)","coverage":0.875},{"name":"static SecKeyRef.createPublicKey(certificateData:)","coverage":0.75},{"name":"String.markerStrippedBase64()","coverage":0.8},{"name":"closure #1 in String.markerStrippedBase64()","coverage":1},{"name":"implicit closure #1 in closure #1 in String.markerStrippedBase64()","coverage":1},{"name":"closure #2 in String.markerStrippedBase64()","coverage":1},{"name":"ASN1Type.byte.getter","coverage":1}]},{"name":"ShareTargetSearchController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/TargetSelecting/ShareTargetSearchController.swift","coverage":0.8095238095238095,"type":"swift","functions":[{"name":"static ShareTargetSearchController.Design.searchBarTintColor.getter","coverage":1},{"name":"static ShareTargetSearchController.Design.searchBarBackgroundColor.getter","coverage":1},{"name":"implicit closure #1 in static ShareTargetSearchController.Design.searchBarBackgroundColor.getter","coverage":1},{"name":"implicit closure #2 in static ShareTargetSearchController.Design.searchBarBackgroundColor.getter","coverage":0},{"name":"ShareTargetSearchController.init(searchResultsController:)","coverage":1},{"name":"ShareTargetSearchController.init(nibName:bundle:)","coverage":0},{"name":"ShareTargetSearchController.init(coder:)","coverage":0},{"name":"implicit closure #1 in ShareTargetSearchController.init(coder:)","coverage":0},{"name":"ShareTargetSearchController.setupSearchBar()","coverage":1},{"name":"ShareTargetSearchController.updateColorAppearance()","coverage":1},{"name":"closure #1 in ShareTargetSearchController.updateColorAppearance()","coverage":1},{"name":"closure #1 in closure #1 in ShareTargetSearchController.updateColorAppearance()","coverage":1}]},{"name":"FlexMessageComponent.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Component/FlexMessageComponent.swift","coverage":0.8181818181818182,"type":"swift","functions":[{"name":"FlexMessageComponent.init(from:)","coverage":0.90625},{"name":"FlexMessageComponent.encode(to:)","coverage":0.9545454545454546},{"name":"implicit closure #1 in FlexMessageComponent.encode(to:)","coverage":0},{"name":"FlexMessageComponent.asBoxComponent.getter","coverage":0},{"name":"FlexMessageComponent.asTextComponent.getter","coverage":0.75},{"name":"FlexMessageComponent.asButtonComponent.getter","coverage":0.75},{"name":"FlexMessageComponent.asImageComponent.getter","coverage":0.75},{"name":"FlexMessageComponent.asFillerComponent.getter","coverage":0.75},{"name":"FlexMessageComponent.asIconComponent.getter","coverage":0.75},{"name":"FlexMessageComponent.asSeparatorComponent.getter","coverage":0.75},{"name":"FlexMessageComponent.asSpacerComponent.getter","coverage":0.75},{"name":"FlexMessageComponent.component.getter","coverage":1}]},{"name":"OpenChatRoomDescriptionTableViewCell.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/View/OpenChatRoomDescriptionTableViewCell.swift","coverage":0.8275862068965517,"type":"swift","functions":[{"name":"variable initialization expression of OpenChatRoomDescriptionTableViewCell.TextViewStyle.font","coverage":1},{"name":"variable initialization expression of OpenChatRoomDescriptionTableViewCell.TextViewStyle.textColor","coverage":1},{"name":"variable initialization expression of OpenChatRoomDescriptionTableViewCell.TextViewStyle.placeholderFont","coverage":1},{"name":"variable initialization expression of OpenChatRoomDescriptionTableViewCell.TextViewStyle.placeholderColor","coverage":1},{"name":"variable initialization expression of OpenChatRoomDescriptionTableViewCell.TextViewStyle.textCountLabelFont","coverage":1},{"name":"variable initialization expression of OpenChatRoomDescriptionTableViewCell.TextViewStyle.textCountLabelColor","coverage":1},{"name":"OpenChatRoomDescriptionTableViewCell.textView.getter","coverage":1},{"name":"variable initialization expression of OpenChatRoomDescriptionTableViewCell.textViewVerticalSpacing","coverage":1},{"name":"variable initialization expression of OpenChatRoomDescriptionTableViewCell.textViewInitialContentHeight","coverage":1},{"name":"OpenChatRoomDescriptionTableViewCell.init(coder:)","coverage":0},{"name":"implicit closure #1 in OpenChatRoomDescriptionTableViewCell.init(coder:)","coverage":0},{"name":"OpenChatRoomDescriptionTableViewCell.init(style:reuseIdentifier:)","coverage":1},{"name":"OpenChatRoomDescriptionTableViewCell.setupSubviews()","coverage":1},{"name":"OpenChatRoomDescriptionTableViewCell.setupLayouts()","coverage":1},{"name":"OpenChatRoomDescriptionTableViewCell.updateContentHeightConstraint(_:)","coverage":1},{"name":"OpenChatRoomDescriptionTableViewCell.tapped()","coverage":0}]},{"name":"FlexSeparatorComponent.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Component/FlexSeparatorComponent.swift","coverage":0.8333333333333334,"type":"swift","functions":[{"name":"variable initialization expression of FlexSeparatorComponent.type","coverage":1},{"name":"FlexSeparatorComponent.init(margin:color:)","coverage":1},{"name":"FlexSeparatorComponent.component.getter","coverage":0}]},{"name":"ShareTargetSearchResultTableViewController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/TargetSearch/ShareTargetSearchResultTableViewController.swift","coverage":0.8333333333333334,"type":"swift","functions":[{"name":"variable initialization expression of ShareTargetSearchResultTableViewController.sectionOrder","coverage":1},{"name":"variable initialization expression of ShareTargetSearchResultTableViewController.hasSearchResult","coverage":1},{"name":"variable initialization expression of ShareTargetSearchResultTableViewController.searchText","coverage":1},{"name":"ShareTargetSearchResultTableViewController.searchText.didset","coverage":1},{"name":"closure #1 in ShareTargetSearchResultTableViewController.searchText.didset","coverage":1},{"name":"implicit closure #1 in ShareTargetSearchResultTableViewController.searchText.didset","coverage":1},{"name":"closure #2 in implicit closure #1 in ShareTargetSearchResultTableViewController.searchText.didset","coverage":1},{"name":"ShareTargetSearchResultTableViewController.init(store:)","coverage":1},{"name":"ShareTargetSearchResultTableViewController.init(coder:)","coverage":0},{"name":"implicit closure #1 in ShareTargetSearchResultTableViewController.init(coder:)","coverage":0},{"name":"ShareTargetSearchResultTableViewController.viewDidLoad()","coverage":1},{"name":"variable initialization expression of ShareTargetSearchResultTableViewController.filteredIndexes","coverage":1},{"name":"ShareTargetSearchResultTableViewController.filteredIndexes.didset","coverage":1},{"name":"ShareTargetSearchResultTableViewController.startObserving()","coverage":1},{"name":"ShareTargetSearchResultTableViewController.stopObserving()","coverage":1},{"name":"ShareTargetSearchResultTableViewController.setupObservers()","coverage":1},{"name":"closure #1 in ShareTargetSearchResultTableViewController.setupObservers()","coverage":0.7272727272727273},{"name":"implicit closure #1 in closure #1 in ShareTargetSearchResultTableViewController.setupObservers()","coverage":0},{"name":"closure #1 in closure #1 in ShareTargetSearchResultTableViewController.setupObservers()","coverage":1},{"name":"closure #2 in ShareTargetSearchResultTableViewController.setupObservers()","coverage":0.7272727272727273},{"name":"implicit closure #1 in closure #2 in ShareTargetSearchResultTableViewController.setupObservers()","coverage":0},{"name":"closure #1 in closure #2 in ShareTargetSearchResultTableViewController.setupObservers()","coverage":1},{"name":"ShareTargetSearchResultTableViewController.stopObservers()","coverage":1},{"name":"ShareTargetSearchResultTableViewController.handleSelectingChange(index:)","coverage":0.6428571428571429},{"name":"ShareTargetSearchResultTableViewController.setupTableView()","coverage":1},{"name":"ShareTargetSearchResultTableViewController.numberOfSections(in:)","coverage":1},{"name":"ShareTargetSearchResultTableViewController.tableView(_:numberOfRowsInSection:)","coverage":1},{"name":"ShareTargetSearchResultTableViewController.tableView(_:cellForRowAt:)","coverage":1},{"name":"ShareTargetSearchResultTableViewController.tableView(_:heightForHeaderInSection:)","coverage":1},{"name":"ShareTargetSearchResultTableViewController.tableView(_:viewForHeaderInSection:)","coverage":1},{"name":"ShareTargetSearchResultTableViewController.actualSection(_:)","coverage":1},{"name":"ShareTargetSearchResultTableViewController.tableView(_:didSelectRowAt:)","coverage":0}]},{"name":"TemplateMessagePayload.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Template/Payloads/TemplateMessagePayload.swift","coverage":0.8461538461538461,"type":"swift","functions":[{"name":"TemplateMessagePayload.init(from:)","coverage":0.95},{"name":"TemplateMessagePayload.encode(to:)","coverage":0.9285714285714286},{"name":"implicit closure #1 in TemplateMessagePayload.encode(to:)","coverage":0},{"name":"TemplateMessagePayload.asButtonsPayload.getter","coverage":0.75},{"name":"TemplateMessagePayload.asConfirmPayload.getter","coverage":0.75},{"name":"TemplateMessagePayload.asCarouselPayload.getter","coverage":0.75},{"name":"TemplateMessagePayload.asImageCarouselPayload.getter","coverage":0.75},{"name":"TemplateMessagePayload.payload.getter","coverage":0}]},{"name":"RequestAdapter.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Client/RequestAdapter.swift","coverage":0.8524590163934426,"type":"swift","functions":[{"name":"TokenAdapter.init(token:)","coverage":1},{"name":"TokenAdapter.adapted(_:)","coverage":1},{"name":"closure #1 in variable initialization expression of static HeaderAdapter.default","coverage":0.7272727272727273},{"name":"closure #1 in closure #1 in variable initialization expression of static HeaderAdapter.default","coverage":0},{"name":"closure #2 in closure #1 in variable initialization expression of static HeaderAdapter.default","coverage":1},{"name":"HeaderAdapter.init(in:)","coverage":1},{"name":"implicit closure #1 in HeaderAdapter.init(in:)","coverage":1},{"name":"implicit closure #2 in implicit closure #1 in HeaderAdapter.init(in:)","coverage":0},{"name":"implicit closure #3 in HeaderAdapter.init(in:)","coverage":0},{"name":"implicit closure #4 in HeaderAdapter.init(in:)","coverage":0},{"name":"HeaderAdapter.adapted(_:)","coverage":1},{"name":"AnyRequestAdapter.init(_:)","coverage":1},{"name":"AnyRequestAdapter.adapted(_:)","coverage":1}]},{"name":"Session.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Client/Session.swift","coverage":0.8567415730337079,"type":"swift","functions":[{"name":"static Session.shared.getter","coverage":1},{"name":"Session.__allocating_init(configuration:)","coverage":1},{"name":"Session.init(configuration:delegate:)","coverage":1},{"name":"Session.send&lt;A&gt;(_:callbackQueue:completionHandler:)","coverage":1},{"name":"Session.send&lt;A&gt;(_:)","coverage":1},{"name":"closure #1 in Session.send&lt;A&gt;(_:)","coverage":1},{"name":"closure #1 in closure #1 in Session.send&lt;A&gt;(_:)","coverage":1},{"name":"Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":0.953125},{"name":"closure #1 in Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":1},{"name":"closure #2 in Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":0.9090909090909091},{"name":"closure #1 in closure #2 in Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":1},{"name":"implicit closure #1 in closure #2 in Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":1},{"name":"implicit closure #2 in implicit closure #1 in closure #2 in Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":1},{"name":"closure #2 in closure #2 in Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":1},{"name":"closure #1 in closure #2 in closure #2 in Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":1},{"name":"closure #2 in closure #2 in closure #2 in Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":1},{"name":"closure #3 in closure #2 in Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":0},{"name":"closure #4 in closure #2 in Session.send&lt;A&gt;(_:callbackQueue:pipelines:completionHandler:)","coverage":0},{"name":"Session.create&lt;A&gt;(_:)","coverage":1},{"name":"implicit closure #1 in Session.create&lt;A&gt;(_:)","coverage":1},{"name":"closure #1 in Session.create&lt;A&gt;(_:)","coverage":1},{"name":"Session.handle&lt;A&gt;(request:data:response:pipelines:fullPipelines:done:)","coverage":0.9714285714285714},{"name":"implicit closure #1 in Session.handle&lt;A&gt;(request:data:response:pipelines:fullPipelines:done:)","coverage":0},{"name":"closure #1 in Session.handle&lt;A&gt;(request:data:response:pipelines:fullPipelines:done:)","coverage":1},{"name":"closure #1 in closure #1 in Session.handle&lt;A&gt;(request:data:response:pipelines:fullPipelines:done:)","coverage":1},{"name":"variable initialization expression of SessionDelegate.tasks","coverage":1},{"name":"variable initialization expression of SessionDelegate.lock","coverage":1},{"name":"SessionDelegate.add(_:)","coverage":1},{"name":"SessionDelegate.remove(_:)","coverage":0},{"name":"SessionDelegate.task(for:)","coverage":0},{"name":"SessionDelegate.shouldTaskStart(_:)","coverage":0},{"name":"SessionDelegate.urlSession(_:dataTask:didReceive:)","coverage":0},{"name":"SessionDelegate.urlSession(_:task:didCompleteWithError:)","coverage":0},{"name":"variable initialization expression of SessionTask.onResult","coverage":1},{"name":"SessionTask.init(session:request:)","coverage":1},{"name":"SessionTask.resume()","coverage":0},{"name":"SessionTask.didReceiveData(_:)","coverage":0},{"name":"URL.appendingPathComponentIfNotEmpty&lt;A&gt;(_:)","coverage":1},{"name":"URL.appendingPathQueryItems&lt;A&gt;(_:)","coverage":0.6153846153846154},{"name":"implicit closure #1 in URL.appendingPathQueryItems&lt;A&gt;(_:)","coverage":0}]},{"name":"PKCE.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/PKCE/PKCE.swift","coverage":0.8571428571428571,"type":"swift","functions":[{"name":"variable initialization expression of PKCE.codeChallengeMethod","coverage":1},{"name":"PKCE.codeChallenge.getter","coverage":1},{"name":"PKCE.init()","coverage":1},{"name":"static PKCE.generateCodeChallenge(codeVerifier:)","coverage":0.8333333333333334},{"name":"implicit closure #1 in static PKCE.generateCodeChallenge(codeVerifier:)","coverage":0}]},{"name":"ShareViewController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/Public/ShareViewController.swift","coverage":0.8639455782312925,"type":"swift","functions":[{"name":"ShareViewController.messages.setter","coverage":1},{"name":"ShareViewController.messages.getter","coverage":1},{"name":"variable initialization expression of ShareViewController.rootViewController","coverage":1},{"name":"ShareViewController.init()","coverage":1},{"name":"ShareViewController.init(coder:)","coverage":0},{"name":"implicit closure #1 in ShareViewController.init(coder:)","coverage":0},{"name":"ShareViewController.preferredStatusBarStyle.getter","coverage":1},{"name":"ShareViewController.setupRootDelegates()","coverage":1},{"name":"closure #1 in ShareViewController.setupRootDelegates()","coverage":0.7777777777777778},{"name":"closure #1 in closure #1 in ShareViewController.setupRootDelegates()","coverage":1},{"name":"closure #2 in ShareViewController.setupRootDelegates()","coverage":1},{"name":"closure #3 in ShareViewController.setupRootDelegates()","coverage":0.6470588235294118},{"name":"implicit closure #1 in closure #3 in ShareViewController.setupRootDelegates()","coverage":0},{"name":"closure #4 in ShareViewController.setupRootDelegates()","coverage":1},{"name":"closure #5 in ShareViewController.setupRootDelegates()","coverage":1},{"name":"closure #6 in ShareViewController.setupRootDelegates()","coverage":1},{"name":"implicit closure #1 in closure #6 in ShareViewController.setupRootDelegates()","coverage":0},{"name":"ShareViewController.setupPresentationDelegate()","coverage":1},{"name":"static ShareViewController.localAuthorizationStatusForSendingMessage()","coverage":1},{"name":"static ShareViewController.localAuthorizationStatusForSendingMessage(permissions:)","coverage":1},{"name":"closure #1 in static ShareViewController.localAuthorizationStatusForSendingMessage(permissions:)","coverage":1},{"name":"ShareViewController.presentationControllerDidDismiss(_:)","coverage":1},{"name":"ShareViewController.presentationControllerShouldDismiss(_:)","coverage":0}]},{"name":"CountLimitedTextView.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/View/CountLimitedTextView.swift","coverage":0.8651685393258427,"type":"swift","functions":[{"name":"CountLimitedTextViewStyle.showCountLimitLabel.getter","coverage":1},{"name":"CountLimitedTextViewStyle.showUnderBorderLine.getter","coverage":1},{"name":"CountLimitedTextView.style.didset","coverage":0},{"name":"variable initialization expression of CountLimitedTextView.onTextUpdated","coverage":1},{"name":"variable initialization expression of CountLimitedTextView.onTextViewChangeContentSize","coverage":1},{"name":"variable initialization expression of CountLimitedTextView.onTextCountLimitReached","coverage":1},{"name":"variable initialization expression of CountLimitedTextView.onShouldReplaceText","coverage":1},{"name":"CountLimitedTextView.placeholderText.didset","coverage":1},{"name":"variable initialization expression of CountLimitedTextView.maximumCount","coverage":1},{"name":"CountLimitedTextView.maximumCount.didset","coverage":1},{"name":"CountLimitedTextView.text.getter","coverage":1},{"name":"CountLimitedTextView.text.setter","coverage":1},{"name":"CountLimitedTextView.textView.getter","coverage":1},{"name":"CountLimitedTextView.placeholderLabel.getter","coverage":1},{"name":"CountLimitedTextView.clearButton.getter","coverage":1},{"name":"CountLimitedTextView.textCountLabel.getter","coverage":1},{"name":"CountLimitedTextView.underline.getter","coverage":1},{"name":"CountLimitedTextView.init(style:)","coverage":1},{"name":"CountLimitedTextView.init(coder:)","coverage":0},{"name":"implicit closure #1 in CountLimitedTextView.init(coder:)","coverage":0},{"name":"CountLimitedTextView.setup()","coverage":1},{"name":"CountLimitedTextView.setupSubviews()","coverage":1},{"name":"CountLimitedTextView.setupLayouts()","coverage":1},{"name":"CountLimitedTextView.clearText()","coverage":0},{"name":"CountLimitedTextView.validateString(_:)","coverage":1},{"name":"implicit closure #1 in CountLimitedTextView.validateString(_:)","coverage":1},{"name":"CountLimitedTextView.textViewDidChange(_:)","coverage":1},{"name":"implicit closure #1 in CountLimitedTextView.textViewDidChange(_:)","coverage":1},{"name":"CountLimitedTextView.textView(_:shouldChangeTextIn:replacementText:)","coverage":0},{"name":"implicit closure #1 in CountLimitedTextView.textView(_:shouldChangeTextIn:replacementText:)","coverage":0}]},{"name":"ParametersAdapter.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Client/ParametersAdapter.swift","coverage":0.8673469387755102,"type":"swift","functions":[{"name":"URLQueryEncoder.init(parameters:)","coverage":1},{"name":"URLQueryEncoder.adapted(_:)","coverage":0.9166666666666666},{"name":"URLQueryEncoder.encoded(for:)","coverage":1},{"name":"closure #1 in URLQueryEncoder.encoded(for:)","coverage":0},{"name":"implicit closure #1 in URLQueryEncoder.encoded(for:)","coverage":1},{"name":"implicit closure #2 in URLQueryEncoder.encoded(for:)","coverage":0},{"name":"JSONParameterEncoder.adapted(_:)","coverage":0.9166666666666666},{"name":"FormUrlEncodedParameterEncoder.adapted(_:)","coverage":1},{"name":"query(_:allowed:)","coverage":1},{"name":"closure #1 in query(_:allowed:)","coverage":1},{"name":"closure #2 in query(_:allowed:)","coverage":1},{"name":"queryComponents(fromKey:value:allowed:)","coverage":0.68},{"name":"escape(_:allowed:)","coverage":1},{"name":"implicit closure #1 in escape(_:allowed:)","coverage":0},{"name":"NSNumber.isBool.getter","coverage":1}]},{"name":"MessageAction.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Actions/MessageAction.swift","coverage":0.8709677419354839,"type":"swift","functions":[{"name":"MessageAction.init(from:)","coverage":0.9090909090909091},{"name":"MessageAction.encode(to:)","coverage":0.875},{"name":"implicit closure #1 in MessageAction.encode(to:)","coverage":0},{"name":"MessageAction.asURIAction.getter","coverage":0.75},{"name":"MessageAction.action.getter","coverage":1},{"name":"variable initialization expression of MessageURIAction.type","coverage":1},{"name":"MessageURIAction.init(label:uri:)","coverage":1},{"name":"MessageURIAction.action.getter","coverage":1}]},{"name":"CryptoData.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/CryptoData.swift","coverage":0.8709677419354839,"type":"swift","functions":[{"name":"CryptoData.init(base64Encoded:)","coverage":0.8333333333333334},{"name":"CryptoData.digest(using:)","coverage":0},{"name":"Crypto.PlainData.init(raw:)","coverage":1},{"name":"Crypto.PlainData.init(string:encoding:)","coverage":0.8333333333333334},{"name":"Crypto.PlainData.encrypted(with:using:)","coverage":0.9},{"name":"Crypto.PlainData.signed(with:algorithm:)","coverage":0.9},{"name":"Crypto.PlainData.verify(with:signature:algorithm:)","coverage":1},{"name":"Crypto.EncryptedData.decrypted(with:using:)","coverage":0.9}]},{"name":"Constant.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/Constant.swift","coverage":0.875,"type":"swift","functions":[{"name":"static Constant.SDKVersionString.getter","coverage":1},{"name":"static Constant.thirdPartyAppReturnScheme.getter","coverage":0.8333333333333334},{"name":"implicit closure #1 in static Constant.thirdPartyAppReturnScheme.getter","coverage":0},{"name":"static Constant.thirdPartyAppReturnURL.getter","coverage":1},{"name":"static Constant.lineAppAuthURLv2.getter","coverage":1}]},{"name":"LocationMessage.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/LocationMessage.swift","coverage":0.875,"type":"swift","functions":[{"name":"variable initialization expression of LocationMessage.type","coverage":1},{"name":"LocationMessage.init(title:address:latitude:longitude:)","coverage":1},{"name":"LocationMessage.message.getter","coverage":0}]},{"name":"CryptoKey.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/CryptoKey.swift","coverage":0.8780487804878049,"type":"swift","functions":[{"name":"CryptoKey.init(base64Encoded:)","coverage":0.8333333333333334},{"name":"CryptoKey.init(pem:)","coverage":1},{"name":"Crypto.RSAPublicKey.init(key:)","coverage":0},{"name":"Crypto.RSAPublicKey.init(der:)","coverage":1},{"name":"Crypto.RSAPublicKey.init(certificate:)","coverage":0.8888888888888888},{"name":"Crypto.RSAPrivateKey.init(key:)","coverage":0},{"name":"Crypto.RSAPrivateKey.init(der:)","coverage":1},{"name":"Crypto.ECDSAPublicKey.init(key:)","coverage":0},{"name":"Crypto.ECDSAPublicKey.init(der:)","coverage":1},{"name":"JWK.getPublicKey()","coverage":1}]},{"name":"VideoMessage.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/VideoMessage.swift","coverage":0.8888888888888888,"type":"swift","functions":[{"name":"variable initialization expression of VideoMessage.type","coverage":1},{"name":"VideoMessage.init(originalContentURL:previewImageURL:)","coverage":1},{"name":"VideoMessage.message.getter","coverage":0}]},{"name":"FlexBubbleContainer.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Container/FlexBubbleContainer.swift","coverage":0.9,"type":"swift","functions":[{"name":"FlexBubbleContainer.Style.init()","coverage":1},{"name":"variable initialization expression of FlexBubbleContainer.type","coverage":1},{"name":"FlexBubbleContainer.init(header:hero:body:footer:styles:)","coverage":1},{"name":"FlexBubbleContainer.container.getter","coverage":0}]},{"name":"KeychainStore.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/KeychainStore.swift","coverage":0.9076923076923077,"type":"swift","functions":[{"name":"KeychainStore.Options.ItemClass.value.getter","coverage":1},{"name":"KeychainStore.Options.Accessibility.value.getter","coverage":1},{"name":"KeychainStore.Options.query.getter","coverage":1},{"name":"KeychainStore.Options.attributes(for:value:)","coverage":1},{"name":"variable initialization expression of KeychainStore.Options.itemClass","coverage":0},{"name":"variable initialization expression of KeychainStore.Options.accessibility","coverage":0},{"name":"KeychainStore.init(service:)","coverage":1},{"name":"KeychainStore.contains(_:)","coverage":0.9285714285714286},{"name":"KeychainStore.set&lt;A&gt;(_:for:using:)","coverage":1},{"name":"KeychainStore.set(_:for:)","coverage":0.8333333333333334},{"name":"KeychainStore.set(_:for:)","coverage":0.8888888888888888},{"name":"KeychainStore.remove(_:)","coverage":0.8571428571428571},{"name":"implicit closure #1 in KeychainStore.remove(_:)","coverage":1},{"name":"KeychainStore.removeAll()","coverage":0.8571428571428571},{"name":"implicit closure #1 in KeychainStore.removeAll()","coverage":1},{"name":"KeychainStore.keychainError(_:)","coverage":0},{"name":"KeychainStore.value&lt;A&gt;(for:using:)","coverage":1},{"name":"KeychainStore.data(for:)","coverage":0.9473684210526315},{"name":"KeychainStore.string(for:)","coverage":1}]},{"name":"LoginButton.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/LoginButton.swift","coverage":0.9084507042253521,"type":"swift","functions":[{"name":"LoginButtonDelegate.loginButtonDidStartLogin(_:)","coverage":0},{"name":"LoginButtonDelegate.loginButton(_:didSucceedLogin:)","coverage":0},{"name":"LoginButtonDelegate.loginButton(_:didFailLogin:)","coverage":0},{"name":"LoginButtonDelegate.loginButton(_:didFailLogin:)","coverage":0},{"name":"LoginButton.ButtonSize.constant.getter","coverage":1},{"name":"LoginButton.ButtonSize.sizeForTitleSize(_:)","coverage":1},{"name":"variable initialization expression of LoginButton.permissions","coverage":1},{"name":"variable initialization expression of LoginButton.parameters","coverage":1},{"name":"variable initialization expression of LoginButton.buttonSize","coverage":1},{"name":"LoginButton.buttonSize.didset","coverage":1},{"name":"LoginButton.buttonText.didset","coverage":1},{"name":"LoginButton.init()","coverage":1},{"name":"LoginButton.init(coder:)","coverage":0},{"name":"LoginButton.setup()","coverage":1},{"name":"closure #1 in LoginButton.setup()","coverage":1},{"name":"LoginButton.updateButtonStyle()","coverage":1},{"name":"closure #1 in LoginButton.updateButtonStyle()","coverage":1},{"name":"implicit closure #1 in LoginButton.updateButtonStyle()","coverage":0},{"name":"LoginButton.intrinsicContentSize.getter","coverage":1},{"name":"implicit closure #1 in LoginButton.intrinsicContentSize.getter","coverage":0},{"name":"LoginButton.login()","coverage":1},{"name":"closure #1 in LoginButton.login()","coverage":0.8888888888888888},{"name":"variable initialization expression of LoginButton.options","coverage":1}]},{"name":"FlexButtonComponent.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Component/FlexButtonComponent.swift","coverage":0.9090909090909091,"type":"swift","functions":[{"name":"variable initialization expression of FlexButtonComponent.type","coverage":1},{"name":"FlexButtonComponent.init(action:flex:margin:height:style:color:gravity:)","coverage":1},{"name":"FlexButtonComponent.component.getter","coverage":0}]},{"name":"FormEntry.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/Model/FormEntry.swift","coverage":0.9166666666666666,"type":"swift","functions":[{"name":"variable initialization expression of RoomNameText.maximumCount","coverage":1},{"name":"variable initialization expression of RoomNameText.onTextUpdated","coverage":1},{"name":"RoomNameText.cell.getter","coverage":1},{"name":"RoomNameText.render()","coverage":1},{"name":"closure #1 in RoomNameText.render()","coverage":1},{"name":"variable initialization expression of RoomDescriptionText.maximumCount","coverage":1},{"name":"variable initialization expression of RoomDescriptionText.onTextUpdated","coverage":1},{"name":"variable initialization expression of RoomDescriptionText.onTextHeightUpdated","coverage":1},{"name":"RoomDescriptionText.cell.getter","coverage":1},{"name":"RoomDescriptionText.render()","coverage":1},{"name":"closure #1 in RoomDescriptionText.render()","coverage":1},{"name":"closure #2 in RoomDescriptionText.render()","coverage":1},{"name":"closure #3 in RoomDescriptionText.render()","coverage":0},{"name":"Option.selectedOption.didset","coverage":1},{"name":"variable initialization expression of Option.onValueChange","coverage":1},{"name":"variable initialization expression of Option.onPresenting","coverage":1},{"name":"Option.cell.getter","coverage":1},{"name":"Option.init(title:options:selectedOption:)","coverage":0.875},{"name":"implicit closure #1 in Option.init(title:options:selectedOption:)","coverage":0},{"name":"implicit closure #2 in Option.init(title:options:selectedOption:)","coverage":1},{"name":"Option.render()","coverage":1},{"name":"Option.tapCell()","coverage":0.9090909090909091},{"name":"closure #1 in Option.tapCell()","coverage":0},{"name":"variable initialization expression of Toggle.onValueChange","coverage":1},{"name":"Toggle.cell.getter","coverage":1},{"name":"Toggle.init(title:initialValue:)","coverage":1},{"name":"Toggle.render()","coverage":1},{"name":"Toggle.searchOptionSwitch.getter","coverage":1},{"name":"Toggle.switchValueDidChange(_:)","coverage":1}]},{"name":"SelectedTargetPanelViewController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/SelectedPanel/SelectedTargetPanelViewController.swift","coverage":0.9166666666666666,"type":"swift","functions":[{"name":"static SelectedTargetPanelViewController.Design.height.getter","coverage":1},{"name":"static SelectedTargetPanelViewController.Design.backgroundColor.getter","coverage":1},{"name":"static SelectedTargetPanelViewController.Design.borderColor.getter","coverage":1},{"name":"static SelectedTargetPanelViewController.Design.borderWidth.getter","coverage":1},{"name":"static SelectedTargetPanelViewController.Design.minimumLineSpacing.getter","coverage":1},{"name":"SelectedTargetPanelViewController.collectionViewContentOffset.getter","coverage":0},{"name":"SelectedTargetPanelViewController.collectionViewContentOffset.setter","coverage":0},{"name":"variable initialization expression of SelectedTargetPanelViewController.slideAnimationView","coverage":1},{"name":"SelectedTargetPanelViewController.updateColorAppearance()","coverage":1},{"name":"variable initialization expression of SelectedTargetPanelViewController.collectionView","coverage":1},{"name":"SelectedTargetPanelViewController.init(store:)","coverage":1},{"name":"SelectedTargetPanelViewController.init(coder:)","coverage":0},{"name":"implicit closure #1 in SelectedTargetPanelViewController.init(coder:)","coverage":0},{"name":"SelectedTargetPanelViewController.viewDidLoad()","coverage":1},{"name":"SelectedTargetPanelViewController.setupSubviews()","coverage":1},{"name":"SelectedTargetPanelViewController.setupLayouts()","coverage":1},{"name":"SelectedTargetPanelViewController.setupObservers()","coverage":1},{"name":"closure #1 in SelectedTargetPanelViewController.setupObservers()","coverage":0.8888888888888888},{"name":"closure #1 in closure #1 in SelectedTargetPanelViewController.setupObservers()","coverage":1},{"name":"closure #2 in SelectedTargetPanelViewController.setupObservers()","coverage":0.8888888888888888},{"name":"closure #1 in closure #2 in SelectedTargetPanelViewController.setupObservers()","coverage":1},{"name":"SelectedTargetPanelViewController.handleSelectingChange(positionInSelected:isSelecting:)","coverage":1},{"name":"closure #1 in SelectedTargetPanelViewController.handleSelectingChange(positionInSelected:isSelecting:)","coverage":1},{"name":"closure #2 in SelectedTargetPanelViewController.handleSelectingChange(positionInSelected:isSelecting:)","coverage":1},{"name":"SelectedTargetPanelViewController.scrollToLast()","coverage":0.4},{"name":"SelectedTargetPanelViewController.modeFromSelection.getter","coverage":1},{"name":"SelectedTargetPanelViewController.setMode(_:animated:)","coverage":1},{"name":"variable initialization expression of SelectedTargetPanelViewController.mode","coverage":1},{"name":"SelectedTargetPanelViewController.updateLayout(animated:)","coverage":1},{"name":"applyChange #1 () in SelectedTargetPanelViewController.updateLayout(animated:)","coverage":1},{"name":"SelectedTargetPanelViewController.traitCollectionDidChange(_:)","coverage":0.6},{"name":"SelectedTargetPanelViewController.collectionView(_:numberOfItemsInSection:)","coverage":1},{"name":"SelectedTargetPanelViewController.collectionView(_:cellForItemAt:)","coverage":1},{"name":"SelectedTargetPanelViewController.collectionView(_:didSelectItemAt:)","coverage":0}]},{"name":"JWT.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/JWT/JWT.swift","coverage":0.9166666666666666,"type":"swift","functions":[{"name":"static JWT.== infix(_:_:)","coverage":1},{"name":"JWT.init(text:)","coverage":0.8888888888888888},{"name":"JWT.init(data:)","coverage":0.8333333333333334},{"name":"JWT.verify(with:)","coverage":0.9090909090909091},{"name":"JWT.verify(with:)","coverage":1},{"name":"JWT.plainSegment.getter","coverage":1},{"name":"JWT.Payload.verify&lt;A&gt;(keyPath:expected:)","coverage":1},{"name":"implicit closure #1 in JWT.Payload.verify&lt;A&gt;(keyPath:expected:)","coverage":1},{"name":"closure #1 in JWT.Payload.verify&lt;A&gt;(keyPath:expected:)","coverage":1},{"name":"JWT.Payload.verify(keyPath:earlierThan:)","coverage":1},{"name":"implicit closure #1 in JWT.Payload.verify(keyPath:earlierThan:)","coverage":1},{"name":"closure #1 in JWT.Payload.verify(keyPath:earlierThan:)","coverage":1},{"name":"JWT.Payload.verify(keyPath:laterThan:)","coverage":1},{"name":"implicit closure #1 in JWT.Payload.verify(keyPath:laterThan:)","coverage":1},{"name":"closure #1 in JWT.Payload.verify(keyPath:laterThan:)","coverage":1},{"name":"JWT.Payload.verify&lt;A&gt;(keyPath:failingReason:condition:)","coverage":0.8},{"name":"JWT.Payload.subscript.getter","coverage":1},{"name":"JWT.Payload.issuer.getter","coverage":1},{"name":"JWT.Payload.subject.getter","coverage":1},{"name":"JWT.Payload.audience.getter","coverage":1},{"name":"JWT.Payload.expiration.getter","coverage":0.8333333333333334},{"name":"JWT.Payload.issueAt.getter","coverage":0.8333333333333334},{"name":"JWT.Payload.amr.getter","coverage":1},{"name":"JWT.Payload.nonce.getter","coverage":1},{"name":"JWT.Payload.name.getter","coverage":1},{"name":"JWT.Payload.pictureURL.getter","coverage":0.8333333333333334},{"name":"JWT.Payload.email.getter","coverage":1}]},{"name":"ImageMessage.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/ImageMessage.swift","coverage":0.9166666666666666,"type":"swift","functions":[{"name":"variable initialization expression of ImageMessage.type","coverage":1},{"name":"ImageMessage.init(originalContentURL:previewImageURL:animated:fileExtension:sender:)","coverage":1},{"name":"ImageMessage.message.getter","coverage":0}]},{"name":"AccessTokenStore.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/Model/AccessTokenStore.swift","coverage":0.9166666666666666,"type":"swift","functions":[{"name":"AccessTokenStore.Version.value.getter","coverage":1},{"name":"AccessTokenStore.Version.encoder.getter","coverage":1},{"name":"AccessTokenStore.Version.decoder.getter","coverage":1},{"name":"AccessTokenStore.Version.tokenType.getter","coverage":0},{"name":"AccessTokenStore.Version.keychainService.getter","coverage":1},{"name":"implicit closure #1 in AccessTokenStore.Version.keychainService.getter","coverage":0},{"name":"AccessTokenStore.Version.tokenKey(for:)","coverage":1},{"name":"static AccessTokenStore.shared.getter","coverage":1},{"name":"variable initialization expression of AccessTokenStore.storeVersion","coverage":1},{"name":"AccessTokenStore.init(configuration:)","coverage":0.8333333333333334},{"name":"variable initialization expression of AccessTokenStore.lock","coverage":1},{"name":"AccessTokenStore.current.getter","coverage":1},{"name":"AccessTokenStore.current.setter","coverage":1},{"name":"AccessTokenStore.setCurrentToken(_:)","coverage":1},{"name":"AccessTokenStore.removeCurrentAccessToken()","coverage":1},{"name":"KeychainStore.set(_:configuration:version:)","coverage":1},{"name":"KeychainStore.token(for:version:)","coverage":1}]},{"name":"ToastView.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/View/ToastView.swift","coverage":0.9207920792079208,"type":"swift","functions":[{"name":"variable initialization expression of ToastView.onDisappeared","coverage":1},{"name":"ToastView.init(views:padding:)","coverage":1},{"name":"ToastView.setup()","coverage":1},{"name":"ToastView.dismiss(fadeOut:)","coverage":1},{"name":"closure #1 in ToastView.dismiss(fadeOut:)","coverage":1},{"name":"closure #2 in ToastView.dismiss(fadeOut:)","coverage":1},{"name":"ToastView.init(coder:)","coverage":0},{"name":"implicit closure #1 in ToastView.init(coder:)","coverage":0},{"name":"ToastLabelView.init(label:padding:)","coverage":1},{"name":"ToastLabelView.init(coder:)","coverage":0},{"name":"implicit closure #1 in ToastLabelView.init(coder:)","coverage":0},{"name":"static ToastView.show(text:in:fadeIn:fadeOut:duration:)","coverage":1},{"name":"closure #1 in static ToastView.show(text:in:fadeIn:fadeOut:duration:)","coverage":1},{"name":"closure #2 in static ToastView.show(text:in:fadeIn:fadeOut:duration:)","coverage":1}]},{"name":"ShareTargetSelectingSectionHeaderView.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/TargetSearch/ShareTargetSelectingSectionHeaderView.swift","coverage":0.9259259259259259,"type":"swift","functions":[{"name":"static ShareTargetSelectingSectionHeaderView.Design.height.getter","coverage":1},{"name":"static ShareTargetSelectingSectionHeaderView.Design.fontSize.getter","coverage":1},{"name":"static ShareTargetSelectingSectionHeaderView.Design.fontColor.getter","coverage":1},{"name":"static ShareTargetSelectingSectionHeaderView.Design.backgroundColor.getter","coverage":1},{"name":"static ShareTargetSelectingSectionHeaderView.Design.borderColor.getter","coverage":1},{"name":"static ShareTargetSelectingSectionHeaderView.Design.borderWidth.getter","coverage":1},{"name":"variable initialization expression of ShareTargetSelectingSectionHeaderView.titleLabel","coverage":1},{"name":"ShareTargetSelectingSectionHeaderView.init(coder:)","coverage":0},{"name":"implicit closure #1 in ShareTargetSelectingSectionHeaderView.init(coder:)","coverage":0},{"name":"ShareTargetSelectingSectionHeaderView.init(frame:)","coverage":1}]},{"name":"LineSDKError.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/General/LineSDKError.swift","coverage":0.9271137026239067,"type":"swift","functions":[{"name":"Error.sdkError.getter","coverage":1},{"name":"implicit closure #1 in Error.sdkError.getter","coverage":0},{"name":"LineSDKError.isRequestError.getter","coverage":1},{"name":"LineSDKError.isResponseError.getter","coverage":1},{"name":"LineSDKError.isAuthorizeError.getter","coverage":1},{"name":"LineSDKError.isGeneralError.getter","coverage":1},{"name":"LineSDKError.isUserCancelled.getter","coverage":1},{"name":"LineSDKError.isBadRequest.getter","coverage":1},{"name":"LineSDKError.isRefreshTokenError.getter","coverage":1},{"name":"LineSDKError.isPermissionError.getter","coverage":1},{"name":"LineSDKError.isTokenError.getter","coverage":1},{"name":"LineSDKError.isResponseError(statusCode:)","coverage":1},{"name":"LineSDKError.isResponseError(statusCode:url:)","coverage":0.9230769230769231},{"name":"LineSDKError.isURLSessionTimeOut.getter","coverage":0},{"name":"LineSDKError.isURLSessionErrorCode(sessionErrorCode:)","coverage":0.8571428571428571},{"name":"LineSDKError.errorDescription.getter","coverage":1},{"name":"LineSDKError.errorCode.getter","coverage":1},{"name":"LineSDKError.errorUserInfo.getter","coverage":1},{"name":"static LineSDKError.errorDomain.getter","coverage":1},{"name":"static LineSDKError.RequestErrorReason.ParameterItem.invalidEntityID(_:value:)","coverage":1},{"name":"LineSDKError.RequestErrorReason.errorDescription.getter","coverage":1},{"name":"closure #1 in LineSDKError.RequestErrorReason.errorDescription.getter","coverage":1},{"name":"LineSDKError.RequestErrorReason.errorCode.getter","coverage":1},{"name":"LineSDKError.RequestErrorReason.errorUserInfo.getter","coverage":1},{"name":"closure #1 in LineSDKError.RequestErrorReason.errorUserInfo.getter","coverage":1},{"name":"LineSDKError.ResponseErrorReason.errorDescription.getter","coverage":0.8},{"name":"implicit closure #1 in LineSDKError.ResponseErrorReason.errorDescription.getter","coverage":0},{"name":"implicit closure #2 in LineSDKError.ResponseErrorReason.errorDescription.getter","coverage":0},{"name":"implicit closure #3 in LineSDKError.ResponseErrorReason.errorDescription.getter","coverage":0},{"name":"LineSDKError.ResponseErrorReason.errorCode.getter","coverage":1},{"name":"LineSDKError.ResponseErrorReason.errorUserInfo.getter","coverage":0.9473684210526315},{"name":"closure #1 in LineSDKError.ResponseErrorReason.errorUserInfo.getter","coverage":1},{"name":"LineSDKError.AuthorizeErrorReason.errorDescription.getter","coverage":1},{"name":"implicit closure #1 in LineSDKError.AuthorizeErrorReason.errorDescription.getter","coverage":1},{"name":"implicit closure #2 in LineSDKError.AuthorizeErrorReason.errorDescription.getter","coverage":1},{"name":"implicit closure #3 in LineSDKError.AuthorizeErrorReason.errorDescription.getter","coverage":1},{"name":"implicit closure #4 in LineSDKError.AuthorizeErrorReason.errorDescription.getter","coverage":0},{"name":"implicit closure #5 in LineSDKError.AuthorizeErrorReason.errorDescription.getter","coverage":0},{"name":"LineSDKError.AuthorizeErrorReason.errorCode.getter","coverage":1},{"name":"LineSDKError.AuthorizeErrorReason.errorUserInfo.getter","coverage":0.8823529411764706},{"name":"closure #1 in LineSDKError.AuthorizeErrorReason.errorUserInfo.getter","coverage":1},{"name":"LineSDKError.GeneralErrorReason.errorDescription.getter","coverage":1},{"name":"LineSDKError.GeneralErrorReason.errorCode.getter","coverage":1},{"name":"LineSDKError.GeneralErrorReason.errorUserInfo.getter","coverage":0.8},{"name":"closure #1 in LineSDKError.GeneralErrorReason.errorUserInfo.getter","coverage":1},{"name":"Result&lt;&gt;.init(catching:)","coverage":0.8571428571428571}]},{"name":"TemplateImageCarouselPayload.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Template/Payloads/TemplateImageCarouselPayload.swift","coverage":0.9285714285714286,"type":"swift","functions":[{"name":"variable initialization expression of TemplateImageCarouselPayload.Column.action","coverage":1},{"name":"TemplateImageCarouselPayload.Column.init(imageURL:action:)","coverage":1},{"name":"variable initialization expression of TemplateImageCarouselPayload.type","coverage":1},{"name":"TemplateImageCarouselPayload.init(columns:)","coverage":1},{"name":"TemplateImageCarouselPayload.addColumn(_:)","coverage":1},{"name":"TemplateImageCarouselPayload.payload.getter","coverage":0}]},{"name":"SelectedTargetPanelCell.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/SelectedPanel/SelectedTargetPanelCell.swift","coverage":0.9298245614035088,"type":"swift","functions":[{"name":"static SelectedTargetPanelCell.Design.textColor.getter","coverage":1},{"name":"static SelectedTargetPanelCell.Design.font.getter","coverage":1},{"name":"variable initialization expression of SelectedTargetPanelCell.avatarImageView","coverage":1},{"name":"variable initialization expression of SelectedTargetPanelCell.nameLabel","coverage":1},{"name":"variable initialization expression of SelectedTargetPanelCell.deleteIconImageView","coverage":1},{"name":"SelectedTargetPanelCell.setShareTarget(_:)","coverage":1},{"name":"SelectedTargetPanelCell.init(coder:)","coverage":0},{"name":"implicit closure #1 in SelectedTargetPanelCell.init(coder:)","coverage":0},{"name":"SelectedTargetPanelCell.init(frame:)","coverage":1},{"name":"SelectedTargetPanelCell.setupSubviews()","coverage":1},{"name":"SelectedTargetPanelCell.setupLayouts()","coverage":1}]},{"name":"Colors.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/Colors.swift","coverage":0.9318181818181818,"type":"swift","functions":[{"name":"static UIColor.LineSDKPanelBorder.getter","coverage":1},{"name":"implicit closure #1 in static UIColor.LineSDKPanelBorder.getter","coverage":1},{"name":"implicit closure #2 in static UIColor.LineSDKPanelBorder.getter","coverage":0},{"name":"static UIColor.LineSDKPanelBackground.getter","coverage":1},{"name":"implicit closure #1 in static UIColor.LineSDKPanelBackground.getter","coverage":1},{"name":"implicit closure #2 in static UIColor.LineSDKPanelBackground.getter","coverage":0},{"name":"static UIColor.compatibleColor(light:dark:)","coverage":1},{"name":"closure #1 in static UIColor.compatibleColor(light:dark:)","coverage":1},{"name":"static UIColor.compatibleColor(light:dark:)","coverage":1},{"name":"implicit closure #1 in static UIColor.compatibleColor(light:dark:)","coverage":1},{"name":"implicit closure #2 in static UIColor.compatibleColor(light:dark:)","coverage":0},{"name":"UIColor.init(hex6:alpha:)","coverage":1},{"name":"UIColor.init(hex8:)","coverage":1},{"name":"UIColor.init(rgb:default:)","coverage":0.8947368421052632},{"name":"UIColor.hexString(_:)","coverage":0.9375},{"name":"implicit closure #1 in UIColor.hexString(_:)","coverage":1},{"name":"implicit closure #2 in UIColor.hexString(_:)","coverage":1},{"name":"implicit closure #3 in UIColor.hexString(_:)","coverage":1},{"name":"implicit closure #4 in UIColor.hexString(_:)","coverage":1},{"name":"implicit closure #5 in UIColor.hexString(_:)","coverage":1},{"name":"UIColor.image(_:)","coverage":1},{"name":"closure #1 in UIColor.image(_:)","coverage":1}]},{"name":"LoginConfiguration.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/LoginConfiguration.swift","coverage":0.9347826086956522,"type":"swift","functions":[{"name":"static LoginConfiguration.shared.getter","coverage":1},{"name":"LoginConfiguration.init(channelID:universalLinkURL:)","coverage":0.7777777777777778},{"name":"implicit closure #1 in LoginConfiguration.init(channelID:universalLinkURL:)","coverage":0},{"name":"LoginConfiguration.isValidCustomizeURL(url:)","coverage":1},{"name":"LoginConfiguration.isValidUniversalLinkURL(url:)","coverage":1}]},{"name":"AudioMessage.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/AudioMessage.swift","coverage":0.9375,"type":"swift","functions":[{"name":"variable initialization expression of AudioMessage.type","coverage":1},{"name":"AudioMessage.duration.getter","coverage":1},{"name":"closure #1 in AudioMessage.duration.getter","coverage":1},{"name":"AudioMessage.duration.setter","coverage":1},{"name":"closure #1 in AudioMessage.duration.setter","coverage":1},{"name":"AudioMessage.init(originalContentURL:duration:)","coverage":1},{"name":"closure #1 in AudioMessage.init(originalContentURL:duration:)","coverage":1},{"name":"AudioMessage.message.getter","coverage":0}]},{"name":"JWA.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/JWK/JWA.swift","coverage":0.9453125,"type":"swift","functions":[{"name":"JWA.Algorithm.algorithm.getter","coverage":1},{"name":"JWA.KeyParameters.init(from:)","coverage":1},{"name":"JWA.KeyParameters.asRSA.getter","coverage":0.75},{"name":"JWA.KeyParameters.asEC.getter","coverage":0.75},{"name":"JWA.RSAParameters.getKeyData()","coverage":0.9166666666666666},{"name":"JWA.ECDSAParameters.getKeyData()","coverage":0.9333333333333333},{"name":"closure #1 in JWA.ECDSAParameters.getKeyData()","coverage":1},{"name":"closure #2 in JWA.ECDSAParameters.getKeyData()","coverage":1},{"name":"Array&lt;A&gt;.encode(as:)","coverage":1},{"name":"Array&lt;A&gt;.dropFirst(_:)","coverage":0.8571428571428571},{"name":"lengthField(of:)","coverage":1}]},{"name":"KeyboardObservable.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/KeyboardObservable.swift","coverage":0.9468085106382979,"type":"swift","functions":[{"name":"KeyboardObservable.addKeyboardObserver()","coverage":1},{"name":"closure #1 in KeyboardObservable.addKeyboardObserver()","coverage":0.90625},{"name":"implicit closure #1 in closure #1 in KeyboardObservable.addKeyboardObserver()","coverage":0},{"name":"implicit closure #2 in closure #1 in KeyboardObservable.addKeyboardObserver()","coverage":0},{"name":"closure #1 in closure #1 in KeyboardObservable.addKeyboardObserver()","coverage":1},{"name":"KeyboardObservable.removeKeyboardObserver()","coverage":1},{"name":"KeyboardInfo.init(endFrame:duration:isLocal:animationCurve:)","coverage":1}]},{"name":"OpenChatCreatingController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/Public/OpenChatCreatingController.swift","coverage":0.9488188976377953,"type":"swift","functions":[{"name":"variable initialization expression of OpenChatCreatingController.suggestedCategory","coverage":1},{"name":"OpenChatCreatingController.init()","coverage":1},{"name":"OpenChatCreatingController.loadAndPresent(in:presentingAnimation:navigationDismissAnimating:presentedHandler:)","coverage":1},{"name":"closure #1 in OpenChatCreatingController.loadAndPresent(in:presentingAnimation:navigationDismissAnimating:presentedHandler:)","coverage":1},{"name":"implicit closure #1 in closure #1 in OpenChatCreatingController.loadAndPresent(in:presentingAnimation:navigationDismissAnimating:presentedHandler:)","coverage":1},{"name":"implicit closure #2 in closure #1 in OpenChatCreatingController.loadAndPresent(in:presentingAnimation:navigationDismissAnimating:presentedHandler:)","coverage":0},{"name":"OpenChatCreatingController.presentTermAgreementAlert(in:handler:)","coverage":0.6521739130434783},{"name":"closure #1 in OpenChatCreatingController.presentTermAgreementAlert(in:handler:)","coverage":0},{"name":"closure #2 in OpenChatCreatingController.presentTermAgreementAlert(in:handler:)","coverage":1},{"name":"OpenChatCreatingController.presentCreatingViewController(in:presentingAnimation:navigationDismissAnimating:handler:)","coverage":1},{"name":"closure #1 in OpenChatCreatingController.presentCreatingViewController(in:presentingAnimation:navigationDismissAnimating:handler:)","coverage":1},{"name":"closure #1 in closure #1 in OpenChatCreatingController.presentCreatingViewController(in:presentingAnimation:navigationDismissAnimating:handler:)","coverage":1},{"name":"closure #2 in OpenChatCreatingController.presentCreatingViewController(in:presentingAnimation:navigationDismissAnimating:handler:)","coverage":1},{"name":"closure #1 in closure #2 in OpenChatCreatingController.presentCreatingViewController(in:presentingAnimation:navigationDismissAnimating:handler:)","coverage":1},{"name":"closure #1 in closure #1 in closure #2 in OpenChatCreatingController.presentCreatingViewController(in:presentingAnimation:navigationDismissAnimating:handler:)","coverage":1},{"name":"closure #1 in closure #1 in closure #1 in closure #2 in OpenChatCreatingController.presentCreatingViewController(in:presentingAnimation:navigationDismissAnimating:handler:)","coverage":1},{"name":"implicit closure #1 in closure #1 in closure #1 in closure #2 in OpenChatCreatingController.presentCreatingViewController(in:presentingAnimation:navigationDismissAnimating:handler:)","coverage":0},{"name":"closure #3 in OpenChatCreatingController.presentCreatingViewController(in:presentingAnimation:navigationDismissAnimating:handler:)","coverage":1},{"name":"static OpenChatCreatingController.localAuthorizationStatusForCreatingOpenChat()","coverage":1},{"name":"static OpenChatCreatingController.localAuthorizationStatusForOpenChat(permissions:)","coverage":1},{"name":"closure #1 in static OpenChatCreatingController.localAuthorizationStatusForOpenChat(permissions:)","coverage":1}]},{"name":"LoadingIndicator.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/LoadingIndicator.swift","coverage":0.9545454545454546,"type":"swift","functions":[{"name":"static LoadingIndicator.add(to:)","coverage":0.8181818181818182},{"name":"LoadingIndicator.init()","coverage":1},{"name":"LoadingIndicator.add(to:)","coverage":1},{"name":"LoadingIndicator.remove()","coverage":1}]},{"name":"ShareTargetSelectingTableCell.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/TargetSelecting/ShareTargetSelectingTableCell.swift","coverage":0.956140350877193,"type":"swift","functions":[{"name":"static ShareTargetSelectingTableCell.Design.height.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.tickLeading.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.tickWidth.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.avatarLeading.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.avatarWidth.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.displayNameLeading.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.displayNameTrailing.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.displayNameTextColor.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.displayNameFont.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.displayNameHighlightedNameColor.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.separatorInset.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.backgroundColor.getter","coverage":1},{"name":"static ShareTargetSelectingTableCell.Design.selectionTickColor.getter","coverage":1},{"name":"implicit closure #1 in static ShareTargetSelectingTableCell.Design.selectionTickColor.getter","coverage":1},{"name":"implicit closure #2 in static ShareTargetSelectingTableCell.Design.selectionTickColor.getter","coverage":0},{"name":"variable initialization expression of ShareTargetSelectingTableCell.tickImageView","coverage":1},{"name":"variable initialization expression of ShareTargetSelectingTableCell.avatarImageView","coverage":1},{"name":"variable initialization expression of ShareTargetSelectingTableCell.displayNameLabel","coverage":1},{"name":"ShareTargetSelectingTableCell.init(style:reuseIdentifier:)","coverage":1},{"name":"ShareTargetSelectingTableCell.setupSubviews()","coverage":1},{"name":"ShareTargetSelectingTableCell.setupLayouts()","coverage":1},{"name":"ShareTargetSelectingTableCell.init(coder:)","coverage":0},{"name":"implicit closure #1 in ShareTargetSelectingTableCell.init(coder:)","coverage":0},{"name":"ShareTargetSelectingTableCell.displayNameAttributedString(_:highlightText:)","coverage":1},{"name":"ShareTargetSelectingTableCell.setShareTarget(_:selected:highlightText:)","coverage":1}]},{"name":"StyleNavigationController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/Base/StyleNavigationController.swift","coverage":0.96,"type":"swift","functions":[{"name":"static StyleNavigationController.Design.navigationBarTintColor.getter","coverage":1},{"name":"static StyleNavigationController.Design.preferredStatusBarStyle.getter","coverage":1},{"name":"static StyleNavigationController.Design.navigationBarTextColor.getter","coverage":1},{"name":"variable initialization expression of StyleNavigationController.navigationBarTintColor","coverage":1},{"name":"StyleNavigationController.navigationBarTintColor.didset","coverage":1},{"name":"variable initialization expression of StyleNavigationController.navigationBarTextColor","coverage":1},{"name":"StyleNavigationController.navigationBarTextColor.didset","coverage":0},{"name":"variable initialization expression of StyleNavigationController.statusBarStyle","coverage":1},{"name":"StyleNavigationController.statusBarStyle.didset","coverage":1},{"name":"StyleNavigationController.viewDidLoad()","coverage":1},{"name":"StyleNavigationController.updateNavigationStyles()","coverage":1},{"name":"StyleNavigationController.preferredStatusBarStyle.getter","coverage":1}]},{"name":"LoginProcessURLResponse.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/LoginProcessURLResponse.swift","coverage":0.967741935483871,"type":"swift","functions":[{"name":"LoginProcessURLResponse.init(from:validatingWith:)","coverage":0.8181818181818182},{"name":"LoginProcessURLResponse.init(webURL:queryItems:validatingState:)","coverage":1}]},{"name":"CodingExtension.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Model/CustomizeCoding/CodingExtension.swift","coverage":0.96875,"type":"swift","functions":[{"name":"KeyedDecodingContainer.decodeLoginPermissions(forKey:)","coverage":1},{"name":"closure #1 in KeyedDecodingContainer.decodeLoginPermissions(forKey:)","coverage":0.8571428571428571},{"name":"KeyedEncodingContainer.encodeLoginPermissions(_:forKey:)","coverage":1},{"name":"closure #1 in KeyedEncodingContainer.encodeLoginPermissions(_:forKey:)","coverage":1},{"name":"Encodable.toJSON()","coverage":1},{"name":"DefaultEnumCodable&lt;&gt;.init(from:)","coverage":1},{"name":"implicit closure #1 in DefaultEnumCodable&lt;&gt;.init(from:)","coverage":1}]},{"name":"ShareTargetSearchResultViewController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/TargetSearch/ShareTargetSearchResultViewController.swift","coverage":0.9703703703703703,"type":"swift","functions":[{"name":"static ShareTargetSearchResultViewController.Design.emptyResultLabelColor.getter","coverage":1},{"name":"ShareTargetSearchResultViewController.searchText.getter","coverage":1},{"name":"ShareTargetSearchResultViewController.searchText.setter","coverage":1},{"name":"ShareTargetSearchResultViewController.sectionOrder.getter","coverage":1},{"name":"ShareTargetSearchResultViewController.sectionOrder.setter","coverage":1},{"name":"variable initialization expression of ShareTargetSearchResultViewController.keyboardObservers","coverage":1},{"name":"ShareTargetSearchResultViewController.panelViewController.getter","coverage":1},{"name":"variable initialization expression of ShareTargetSearchResultViewController.panelContainer","coverage":1},{"name":"ShareTargetSearchResultViewController.init(store:)","coverage":1},{"name":"ShareTargetSearchResultViewController.init(coder:)","coverage":0},{"name":"implicit closure #1 in ShareTargetSearchResultViewController.init(coder:)","coverage":0},{"name":"ShareTargetSearchResultViewController.viewDidLoad()","coverage":1},{"name":"ShareTargetSearchResultViewController.setupSubviews()","coverage":1},{"name":"closure #1 in ShareTargetSearchResultViewController.setupSubviews()","coverage":1},{"name":"closure #1 in closure #1 in ShareTargetSearchResultViewController.setupSubviews()","coverage":1},{"name":"ShareTargetSearchResultViewController.setupLayouts()","coverage":1},{"name":"ShareTargetSearchResultViewController.start()","coverage":1},{"name":"ShareTargetSearchResultViewController.clear()","coverage":1},{"name":"ShareTargetSearchResultViewController.updatePanelBottomConstraint(keyboardInfo:)","coverage":1},{"name":"ShareTargetSearchResultViewController.handleKeyboardChange(_:)","coverage":1},{"name":"closure #1 in ShareTargetSearchResultViewController.handleKeyboardChange(_:)","coverage":1},{"name":"ShareTargetSearchResultViewController.viewDidLayoutSubviews()","coverage":1},{"name":"ShareTargetSearchResultViewController.keyboardInfoWillChange(keyboardInfo:)","coverage":1}]},{"name":"AccessToken.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/Model/AccessToken.swift","coverage":0.98,"type":"swift","functions":[{"name":"AccessToken.expiresAt.getter","coverage":1},{"name":"AccessToken.init(from:)","coverage":1},{"name":"implicit closure #1 in AccessToken.init(from:)","coverage":1},{"name":"AccessToken.init(token:currentIDTokenRaw:)","coverage":0.9333333333333333},{"name":"AccessToken.encode(to:)","coverage":1}]},{"name":"Request.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Client/Request.swift","coverage":0.981651376146789,"type":"swift","functions":[{"name":"HTTPMethod.adapter.getter","coverage":1},{"name":"closure #1 in HTTPMethod.adapter.getter","coverage":1},{"name":"AuthenticateMethod.adapter.getter","coverage":1},{"name":"AuthenticateMethod.refreshTokenPipeline.getter","coverage":1},{"name":"ContentType.headerValue.getter","coverage":1},{"name":"ContentType.adapter.getter","coverage":1},{"name":"closure #1 in ContentType.adapter.getter","coverage":1},{"name":"Request.baseURL.getter","coverage":1},{"name":"Request.cachePolicy.getter","coverage":1},{"name":"Request.adapters.getter","coverage":0.9666666666666667},{"name":"implicit closure #1 in Request.adapters.getter","coverage":0},{"name":"closure #1 in Request.adapters.getter","coverage":1},{"name":"closure #2 in Request.adapters.getter","coverage":1},{"name":"Request.pipelines.getter","coverage":1},{"name":"closure #1 in Request.pipelines.getter","coverage":1},{"name":"Request.pathQueries.getter","coverage":1},{"name":"Request.suffixAdapters.getter","coverage":1},{"name":"Request.prefixPipelines.getter","coverage":1},{"name":"Request.dataParser.getter","coverage":1},{"name":"Request.contentType.getter","coverage":1},{"name":"Request.parameters.getter","coverage":1},{"name":"Request.timeout.getter","coverage":1}]},{"name":"ColumnDataStore.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/Model/ColumnDataStore.swift","coverage":0.9896907216494846,"type":"swift","functions":[{"name":"ColumnDataStore.selectedData.getter","coverage":1},{"name":"closure #1 in ColumnDataStore.selectedData.getter","coverage":1},{"name":"variable initialization expression of ColumnDataStore.maximumSelectedCount","coverage":1},{"name":"variable initialization expression of ColumnDataStore.selectedIndexes","coverage":1},{"name":"ColumnDataStore.columnCount.getter","coverage":1},{"name":"ColumnDataStore.init(columnCount:)","coverage":1},{"name":"ColumnDataStore.append(data:to:)","coverage":1},{"name":"closure #1 in ColumnDataStore.append(data:to:)","coverage":1},{"name":"ColumnDataStore.data(atColumn:)","coverage":1},{"name":"implicit closure #1 in ColumnDataStore.data(atColumn:)","coverage":1},{"name":"implicit closure #2 in ColumnDataStore.data(atColumn:)","coverage":0},{"name":"ColumnDataStore.data(atColumn:row:)","coverage":1},{"name":"ColumnDataStore.data(at:)","coverage":1},{"name":"ColumnDataStore.isSelected(at:)","coverage":1},{"name":"ColumnDataStore.toggleSelect(atColumn:row:)","coverage":1},{"name":"notifySelectingChange #1 &lt;A&gt;(selected:targetIndex:positionInSelected:) in ColumnDataStore.toggleSelect(atColumn:row:)","coverage":1},{"name":"ColumnDataStore.indexes(atColumn:where:)","coverage":1},{"name":"closure #1 in ColumnDataStore.indexes(atColumn:where:)","coverage":1},{"name":"closure #2 in ColumnDataStore.indexes(atColumn:where:)","coverage":1},{"name":"ColumnDataStore.indexes(where:)","coverage":1},{"name":"closure #1 in ColumnDataStore.indexes(where:)","coverage":1}]},{"name":"ShareRootViewController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/TargetSelecting/ShareRootViewController.swift","coverage":0.9899328859060402,"type":"swift","functions":[{"name":"variable initialization expression of ShareRootViewController.store","coverage":1},{"name":"variable initialization expression of ShareRootViewController.allLoaded","coverage":1},{"name":"variable initialization expression of ShareRootViewController.onCancelled","coverage":1},{"name":"variable initialization expression of ShareRootViewController.onLoadingFailed","coverage":1},{"name":"variable initialization expression of ShareRootViewController.onSendingMessage","coverage":1},{"name":"variable initialization expression of ShareRootViewController.onSendingSuccess","coverage":1},{"name":"variable initialization expression of ShareRootViewController.onSendingFailure","coverage":1},{"name":"variable initialization expression of ShareRootViewController.onShouldDismiss","coverage":1},{"name":"ShareRootViewController.panelContainer.getter","coverage":1},{"name":"ShareRootViewController.panelViewController.getter","coverage":1},{"name":"ShareRootViewController.selectedCount.getter","coverage":1},{"name":"ShareRootViewController.pageViewController.getter","coverage":1},{"name":"closure #1 in closure #1 in ShareRootViewController.pageViewController.getter","coverage":1},{"name":"closure #2 in closure #1 in ShareRootViewController.pageViewController.getter","coverage":1},{"name":"closure #3 in closure #1 in ShareRootViewController.pageViewController.getter","coverage":1},{"name":"ShareRootViewController.__deallocating_deinit","coverage":1},{"name":"ShareRootViewController.viewDidLoad()","coverage":1},{"name":"ShareRootViewController.setupSubviews()","coverage":1},{"name":"ShareRootViewController.setupLayouts()","coverage":1},{"name":"ShareRootViewController.setupObservers()","coverage":1},{"name":"closure #1 in ShareRootViewController.setupObservers()","coverage":1},{"name":"closure #1 in closure #1 in ShareRootViewController.setupObservers()","coverage":1},{"name":"closure #2 in ShareRootViewController.setupObservers()","coverage":1},{"name":"closure #1 in closure #2 in ShareRootViewController.setupObservers()","coverage":1},{"name":"ShareRootViewController.cancelSharing()","coverage":1},{"name":"ShareRootViewController.loadGraphList()","coverage":1},{"name":"closure #1 in ShareRootViewController.loadGraphList()","coverage":1},{"name":"closure #2 in ShareRootViewController.loadGraphList()","coverage":1},{"name":"closure #3 in ShareRootViewController.loadGraphList()","coverage":1},{"name":"closure #4 in ShareRootViewController.loadGraphList()","coverage":1},{"name":"closure #5 in ShareRootViewController.loadGraphList()","coverage":1},{"name":"ShareRootViewController.handleSelectingChange()","coverage":1},{"name":"ShareRootViewController.sendMessage()","coverage":1},{"name":"callbackFailure #1 @Sendable (_:) in ShareRootViewController.sendMessage()","coverage":1},{"name":"callbackSuccess #1 @Sendable (_:) in ShareRootViewController.sendMessage()","coverage":1},{"name":"closure #1 in ShareRootViewController.sendMessage()","coverage":1},{"name":"closure #1 in closure #1 in ShareRootViewController.sendMessage()","coverage":0},{"name":"implicit closure #1 in closure #1 in ShareRootViewController.sendMessage()","coverage":0},{"name":"implicit closure #2 in closure #1 in ShareRootViewController.sendMessage()","coverage":0},{"name":"ShareRootViewController.shouldSearchStart(_:)","coverage":1},{"name":"closure #1 in ShareRootViewController.shouldSearchStart(_:)","coverage":1},{"name":"closure #1 in closure #1 in ShareRootViewController.shouldSearchStart(_:)","coverage":1},{"name":"ShareRootViewController.correspondingSelectedPanelViewController(for:)","coverage":1},{"name":"ShareRootViewController.pageViewController(for:)","coverage":1}]},{"name":"ResponsePipeline.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Client/ResponsePipeline.swift","coverage":0.990990990990991,"type":"swift","functions":[{"name":"static ResponsePipeline.== infix(_:_:)","coverage":1},{"name":"JSONParsePipeline.init(_:)","coverage":1},{"name":"JSONParsePipeline.parse&lt;A&gt;(request:data:)","coverage":1},{"name":"RefreshTokenRedirector.shouldApply&lt;A&gt;(request:data:response:)","coverage":1},{"name":"RefreshTokenRedirector.redirect&lt;A&gt;(request:data:response:done:)","coverage":1},{"name":"closure #1 in RefreshTokenRedirector.redirect&lt;A&gt;(request:data:response:done:)","coverage":1},{"name":"BadHTTPStatusRedirector.init(valid:)","coverage":1},{"name":"BadHTTPStatusRedirector.shouldApply&lt;A&gt;(request:data:response:)","coverage":1},{"name":"BadHTTPStatusRedirector.redirect&lt;A&gt;(request:data:response:done:)","coverage":1},{"name":"DataTransformRedirector.init(condition:transform:)","coverage":1},{"name":"DataTransformRedirector.shouldApply&lt;A&gt;(request:data:response:)","coverage":1},{"name":"implicit closure #1 in DataTransformRedirector.shouldApply&lt;A&gt;(request:data:response:)","coverage":0},{"name":"DataTransformRedirector.redirect&lt;A&gt;(request:data:response:done:)","coverage":1},{"name":"closure #1 in variable initialization expression of emptyDataTransformer","coverage":1},{"name":"closure #1 in closure #1 in variable initialization expression of emptyDataTransformer","coverage":1},{"name":"closure #2 in closure #1 in variable initialization expression of emptyDataTransformer","coverage":1}]},{"name":"MessageShareTargetType.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/SharingUI/Public/MessageShareTargetType.swift","coverage":1,"type":"swift","functions":[{"name":"MessageShareTargetType.title.getter","coverage":1}]},{"name":"PostRevokeTokenRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/Request/PostRevokeTokenRequest.swift","coverage":1,"type":"swift","functions":[{"name":"RevokeTokenRequest.method.getter","coverage":1},{"name":"RevokeTokenRequest.path.getter","coverage":1},{"name":"RevokeTokenRequest.contentType.getter","coverage":1},{"name":"RevokeTokenRequest.authentication.getter","coverage":1},{"name":"RevokeTokenRequest.prefixPipelines.getter","coverage":1},{"name":"PostRevokeTokenRequest.parameters.getter","coverage":1},{"name":"PostRevokeRefreshTokenRequest.parameters.getter","coverage":1}]},{"name":"FlexBlockStyle.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Style/FlexBlockStyle.swift","coverage":1,"type":"swift","functions":[{"name":"FlexBlockStyle.init(backgroundColor:separator:separatorColor:)","coverage":1}]},{"name":"PostSendMessagesRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Request/PostSendMessagesRequest.swift","coverage":1,"type":"swift","functions":[{"name":"PostSendMessagesRequest.init(chatID:messages:)","coverage":1},{"name":"closure #1 in PostSendMessagesRequest.init(chatID:messages:)","coverage":1},{"name":"variable initialization expression of PostSendMessagesRequest.method","coverage":1},{"name":"variable initialization expression of PostSendMessagesRequest.path","coverage":1},{"name":"variable initialization expression of PostSendMessagesRequest.authentication","coverage":1},{"name":"PostSendMessagesRequest.parameters.getter","coverage":1},{"name":"MessageSendingStatus.init(from:)","coverage":1},{"name":"MessageSendingStatus.isOK.getter","coverage":1}]},{"name":"GetUserProfileRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/Request/GetUserProfileRequest.swift","coverage":1,"type":"swift","functions":[{"name":"GetUserProfileRequest.init()","coverage":1},{"name":"variable initialization expression of GetUserProfileRequest.method","coverage":1},{"name":"variable initialization expression of GetUserProfileRequest.path","coverage":1},{"name":"variable initialization expression of GetUserProfileRequest.authentication","coverage":1},{"name":"GetUserProfileRequestInjectedToken.init(token:)","coverage":1},{"name":"GetUserProfileRequestInjectedToken.method.getter","coverage":1},{"name":"GetUserProfileRequestInjectedToken.path.getter","coverage":1},{"name":"GetUserProfileRequestInjectedToken.authentication.getter","coverage":1},{"name":"GetUserProfileRequestInjectedToken.adapters.getter","coverage":1},{"name":"closure #1 in GetUserProfileRequestInjectedToken.adapters.getter","coverage":1}]},{"name":"NotificationToken.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/NotificationToken.swift","coverage":1,"type":"swift","functions":[{"name":"NotificationToken.init(token:in:)","coverage":1},{"name":"NotificationToken.deinit","coverage":1},{"name":"NSNotificationCenter.addObserver(forName:object:queue:using:)","coverage":1}]},{"name":"FlexTextComponent.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Component/FlexTextComponent.swift","coverage":1,"type":"swift","functions":[{"name":"variable initialization expression of FlexTextComponent.type","coverage":1},{"name":"FlexTextComponent.init(text:flex:margin:size:alignment:gravity:wrapping:maxLines:weight:color:action:)","coverage":1},{"name":"FlexTextComponent.component.getter","coverage":1}]},{"name":"TextMessage.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/TextMessage.swift","coverage":1,"type":"swift","functions":[{"name":"variable initialization expression of TextMessage.type","coverage":1},{"name":"TextMessage.init(text:sender:)","coverage":1},{"name":"TextMessage.message.getter","coverage":1}]},{"name":"JWK.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/JWK/JWK.swift","coverage":1,"type":"swift","functions":[{"name":"JWK.init(from:)","coverage":1},{"name":"JWK.getKeyData()","coverage":1}]},{"name":"FlexImageComponent.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/Flex/Component/FlexImageComponent.swift","coverage":1,"type":"swift","functions":[{"name":"variable initialization expression of FlexImageComponent.type","coverage":1},{"name":"FlexImageComponent.init(url:flex:margin:alignment:gravity:size:aspectRatio:aspectMode:backgroundColor:action:)","coverage":1},{"name":"FlexImageComponent.component.getter","coverage":1}]},{"name":"Delegate.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/Delegate.swift","coverage":1,"type":"swift","functions":[{"name":"Delegate.init()","coverage":1},{"name":"variable initialization expression of Delegate.lock","coverage":1},{"name":"Delegate.delegate&lt;A&gt;(on:block:)","coverage":1},{"name":"closure #1 in Delegate.delegate&lt;A&gt;(on:block:)","coverage":1},{"name":"Delegate.call(_:)","coverage":1},{"name":"Delegate&lt;&gt;.call()","coverage":1}]},{"name":"APIError.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Model/APIError.swift","coverage":1,"type":"swift","functions":[{"name":"APIError.init(_:)","coverage":1},{"name":"APIError.init(_:)","coverage":1}]},{"name":"GetVerifyTokenRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/Request/GetVerifyTokenRequest.swift","coverage":1,"type":"swift","functions":[{"name":"GetVerifyTokenRequest.init(accessToken:)","coverage":1},{"name":"variable initialization expression of GetVerifyTokenRequest.method","coverage":1},{"name":"variable initialization expression of GetVerifyTokenRequest.path","coverage":1},{"name":"variable initialization expression of GetVerifyTokenRequest.authentication","coverage":1},{"name":"GetVerifyTokenRequest.parameters.getter","coverage":1}]},{"name":"JWKSet.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/JWK/JWKSet.swift","coverage":1,"type":"swift","functions":[{"name":"JWKSet.init(from:)","coverage":1},{"name":"JWKSet.getKeyByID(_:)","coverage":1},{"name":"closure #1 in JWKSet.getKeyByID(_:)","coverage":1}]},{"name":"VerticallyCenteredTextView.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/View/VerticallyCenteredTextView.swift","coverage":1,"type":"swift","functions":[{"name":"VerticallyCenteredTextView.contentSize.didset","coverage":1}]},{"name":"MessageSender.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Model/MessageSender.swift","coverage":1,"type":"swift","functions":[{"name":"MessageSender.init(label:iconURL:linkURL:)","coverage":1}]},{"name":"ChainedPaginatedRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Client/ChainedPaginatedRequest.swift","coverage":1,"type":"swift","functions":[{"name":"ChainedPaginatedRequest.method.getter","coverage":1},{"name":"ChainedPaginatedRequest.path.getter","coverage":1},{"name":"ChainedPaginatedRequest.authentication.getter","coverage":1},{"name":"variable initialization expression of ChainedPaginatedRequest.lock","coverage":1},{"name":"ChainedPaginatedRequest.init(originalRequest:)","coverage":1},{"name":"variable initialization expression of ChainedPaginatedRequest.onPageLoaded","coverage":1},{"name":"variable initialization expression of ChainedPaginatedRequest.items","coverage":1},{"name":"ChainedPaginatedRequest.appendItems(_:)","coverage":1},{"name":"ChainedPaginatedRequest.getItems()","coverage":1},{"name":"ChainedPaginatedRequest.parameters.getter","coverage":1},{"name":"ChainedPaginatedRequest.pipelines.getter","coverage":1},{"name":"closure #1 in ChainedPaginatedRequest.pipelines.getter","coverage":1},{"name":"closure #1 in closure #1 in ChainedPaginatedRequest.pipelines.getter","coverage":1},{"name":"variable initialization expression of PaginatedParseRedirector.onParsed","coverage":1},{"name":"PaginatedParseRedirector.init(request:parser:)","coverage":1},{"name":"PaginatedParseRedirector.shouldApply&lt;A&gt;(request:data:response:)","coverage":1},{"name":"PaginatedParseRedirector.redirect&lt;A&gt;(request:data:response:done:)","coverage":1},{"name":"PaginatedResultTerminator.init(request:)","coverage":1},{"name":"PaginatedResultTerminator.parse&lt;A&gt;(request:data:)","coverage":1}]},{"name":"PostMultisendMessagesRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Request/PostMultisendMessagesRequest.swift","coverage":1,"type":"swift","functions":[{"name":"PostMultisendMessagesRequest.init(userIDs:messages:)","coverage":1},{"name":"closure #1 in PostMultisendMessagesRequest.init(userIDs:messages:)","coverage":1},{"name":"variable initialization expression of PostMultisendMessagesRequest.method","coverage":1},{"name":"variable initialization expression of PostMultisendMessagesRequest.path","coverage":1},{"name":"variable initialization expression of PostMultisendMessagesRequest.authentication","coverage":1},{"name":"PostMultisendMessagesRequest.parameters.getter","coverage":1}]},{"name":"OpenChatCategoryExtensions.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/Model/OpenChatCategoryExtensions.swift","coverage":1,"type":"swift","functions":[{"name":"OpenChatCategory.description.getter","coverage":1}]},{"name":"GetJWKSetRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/GetJWKSetRequest.swift","coverage":1,"type":"swift","functions":[{"name":"GetJWKSetRequest.init(url:)","coverage":1},{"name":"variable initialization expression of GetJWKSetRequest.cachePolicy","coverage":1},{"name":"variable initialization expression of GetJWKSetRequest.method","coverage":1},{"name":"variable initialization expression of GetJWKSetRequest.authentication","coverage":1},{"name":"variable initialization expression of GetJWKSetRequest.path","coverage":1}]},{"name":"String.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/String.swift","coverage":1,"type":"swift","functions":[{"name":"String.prefixNormalized.getter","coverage":1},{"name":"closure #1 in String.prefixNormalized.getter","coverage":1},{"name":"String.normalized.getter","coverage":1},{"name":"String.trimming(upper:)","coverage":1},{"name":"String.containsNewline.getter","coverage":1},{"name":"String.isValid.getter","coverage":1},{"name":"implicit closure #1 in String.isValid.getter","coverage":1}]},{"name":"LoginPermission.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Login/LoginPermission.swift","coverage":1,"type":"swift","functions":[{"name":"LoginPermission.init(rawValue:)","coverage":1},{"name":"LoginPermission.description.getter","coverage":1}]},{"name":"ResultUtils.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/ResultUtils.swift","coverage":1,"type":"swift","functions":[{"name":"static ResultUtil.match&lt;A, B, C&gt;(result:onSuccess:onFailure:)","coverage":1},{"name":"static ResultUtil.matchSuccess&lt;A, B, C&gt;(result:with:)","coverage":1},{"name":"closure #1 in static ResultUtil.matchSuccess&lt;A, B, C&gt;(result:with:)","coverage":1},{"name":"closure #2 in static ResultUtil.matchSuccess&lt;A, B, C&gt;(result:with:)","coverage":1},{"name":"static ResultUtil.matchFailure&lt;A, B, C&gt;(result:with:)","coverage":1},{"name":"closure #1 in static ResultUtil.matchFailure&lt;A, B, C&gt;(result:with:)","coverage":1},{"name":"closure #2 in static ResultUtil.matchFailure&lt;A, B, C&gt;(result:with:)","coverage":1},{"name":"static ResultUtil.match&lt;A, B, C&gt;(result:with:)","coverage":1},{"name":"closure #1 in static ResultUtil.match&lt;A, B, C&gt;(result:with:)","coverage":1},{"name":"closure #2 in static ResultUtil.match&lt;A, B, C&gt;(result:with:)","coverage":1},{"name":"Result.match&lt;A&gt;(onSuccess:onFailure:)","coverage":1},{"name":"Result.matchSuccess&lt;A&gt;(with:)","coverage":1},{"name":"Result.matchFailure&lt;A&gt;(with:)","coverage":1},{"name":"Result.match&lt;A&gt;(with:)","coverage":1}]},{"name":"GetDiscoveryDocumentRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/GetDiscoveryDocumentRequest.swift","coverage":1,"type":"swift","functions":[{"name":"variable initialization expression of GetDiscoveryDocumentRequest.cachePolicy","coverage":1},{"name":"variable initialization expression of GetDiscoveryDocumentRequest.method","coverage":1},{"name":"variable initialization expression of GetDiscoveryDocumentRequest.authentication","coverage":1},{"name":"variable initialization expression of GetDiscoveryDocumentRequest.baseURL","coverage":1},{"name":"variable initialization expression of GetDiscoveryDocumentRequest.path","coverage":1}]},{"name":"OpenChatCreatingFormItem.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/OpenChat/Model/OpenChatCreatingFormItem.swift","coverage":1,"type":"swift","functions":[{"name":"variable initialization expression of OpenChatCreatingFormItem.roomName","coverage":1},{"name":"variable initialization expression of OpenChatCreatingFormItem.roomDescription","coverage":1},{"name":"variable initialization expression of OpenChatCreatingFormItem.category","coverage":1},{"name":"variable initialization expression of OpenChatCreatingFormItem.allowSearch","coverage":1},{"name":"variable initialization expression of OpenChatCreatingFormItem.userName","coverage":1},{"name":"OpenChatCreatingFormItem.normalize()","coverage":1}]},{"name":"GetOpenChatTermAgreementStatusRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/OpenChat/Request/GetOpenChatTermAgreementStatusRequest.swift","coverage":1,"type":"swift","functions":[{"name":"variable initialization expression of GetOpenChatTermAgreementStatusRequest.method","coverage":1},{"name":"variable initialization expression of GetOpenChatTermAgreementStatusRequest.path","coverage":1},{"name":"variable initialization expression of GetOpenChatTermAgreementStatusRequest.authentication","coverage":1},{"name":"GetOpenChatTermAgreementStatusRequest.init()","coverage":1}]},{"name":"PostOpenChatCreateRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/OpenChat/Request/PostOpenChatCreateRequest.swift","coverage":1,"type":"swift","functions":[{"name":"variable initialization expression of PostOpenChatCreateRequest.method","coverage":1},{"name":"variable initialization expression of PostOpenChatCreateRequest.path","coverage":1},{"name":"variable initialization expression of PostOpenChatCreateRequest.authentication","coverage":1},{"name":"PostOpenChatCreateRequest.init(room:)","coverage":1},{"name":"PostOpenChatCreateRequest.parameters.getter","coverage":1},{"name":"OpenChatRoomCreatingItem.toDictionary.getter","coverage":1}]},{"name":"HexColor.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Networking/Model/CustomizeCoding/HexColor.swift","coverage":1,"type":"swift","functions":[{"name":"HexColor.init(_:)","coverage":1},{"name":"HexColor.init(rawValue:default:)","coverage":1},{"name":"HexColor.init(from:)","coverage":1},{"name":"HexColor.encode(to:)","coverage":1},{"name":"static HexColor.== infix(_:_:)","coverage":1},{"name":"HexColor.init(stringLiteral:)","coverage":1}]},{"name":"OpenChatUserProfileViewController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/ViewControllers/OpenChatUserProfileViewController.swift","coverage":1,"type":"swift","functions":[{"name":"static OpenChatUserProfileViewController.Design.backgroundColor.getter","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.TextViewStyle.font","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.TextViewStyle.textColor","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.TextViewStyle.placeholderFont","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.TextViewStyle.placeholderColor","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.TextViewStyle.textCountLabelFont","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.TextViewStyle.textCountLabelColor","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.TextViewStyle.showCountLimitLabel","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.TextViewStyle.showUnderBorderLine","coverage":1},{"name":"OpenChatUserProfileViewController.formItem.didset","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.onProfileDone","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.textViewVerticalSpacing","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.textViewInitialContentHeight","coverage":1},{"name":"OpenChatUserProfileViewController.scrollView.getter","coverage":1},{"name":"OpenChatUserProfileViewController.stackView.getter","coverage":1},{"name":"OpenChatUserProfileViewController.nameTextView.getter","coverage":1},{"name":"closure #1 in closure #1 in OpenChatUserProfileViewController.nameTextView.getter","coverage":1},{"name":"closure #2 in closure #1 in OpenChatUserProfileViewController.nameTextView.getter","coverage":1},{"name":"closure #3 in closure #1 in OpenChatUserProfileViewController.nameTextView.getter","coverage":1},{"name":"closure #4 in closure #1 in OpenChatUserProfileViewController.nameTextView.getter","coverage":1},{"name":"OpenChatUserProfileViewController.nickNameTipLabel.getter","coverage":1},{"name":"variable initialization expression of OpenChatUserProfileViewController.keyboardObservers","coverage":1},{"name":"OpenChatUserProfileViewController.viewDidLoad()","coverage":1},{"name":"OpenChatUserProfileViewController.viewDidAppear(_:)","coverage":1},{"name":"OpenChatUserProfileViewController.viewDidDisappear(_:)","coverage":1},{"name":"OpenChatUserProfileViewController.setupSubviews()","coverage":1},{"name":"OpenChatUserProfileViewController.setupLayouts()","coverage":1},{"name":"OpenChatUserProfileViewController.setupNavigationBar()","coverage":1},{"name":"OpenChatUserProfileViewController.handleKeyboardChange(_:)","coverage":1},{"name":"closure #1 in OpenChatUserProfileViewController.handleKeyboardChange(_:)","coverage":1},{"name":"OpenChatUserProfileViewController.updateViews()","coverage":1},{"name":"OpenChatUserProfileViewController.profileDone()","coverage":1},{"name":"OpenChatUserProfileViewController.keyboardInfoWillChange(keyboardInfo:)","coverage":1}]},{"name":"JWTHelpers.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/JWT/JWTHelpers.swift","coverage":1,"type":"swift","functions":[{"name":"String.base64URLDecoded.getter","coverage":1},{"name":"Data.base64URLEncoded.getter","coverage":1}]},{"name":"UserDefaultsValue.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Utils/UserDefaultsValue.swift","coverage":1,"type":"swift","functions":[{"name":"static UserDefaultsValue.cachedOpenChatUserProfileName.setter","coverage":1},{"name":"static UserDefaultsValue.cachedOpenChatUserProfileName.getter","coverage":1},{"name":"static UserDefaultsValue.clear()","coverage":1}]},{"name":"GetBotFriendshipStatus.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Friendship/Request/GetBotFriendshipStatus.swift","coverage":1,"type":"swift","functions":[{"name":"variable initialization expression of GetBotFriendshipStatusRequest.method","coverage":1},{"name":"variable initialization expression of GetBotFriendshipStatusRequest.path","coverage":1},{"name":"variable initialization expression of GetBotFriendshipStatusRequest.authentication","coverage":1},{"name":"GetBotFriendshipStatusRequest.init()","coverage":1}]},{"name":"FormSection.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/Model/FormSection.swift","coverage":1,"type":"swift","functions":[{"name":"FormSection.init(entries:footerText:)","coverage":1},{"name":"variable initialization expression of FormSectionRenderer.footerContentInsets","coverage":1},{"name":"FormSectionRenderer.footerView.getter","coverage":1},{"name":"FormSectionRenderer.footerLabel.getter","coverage":1},{"name":"FormSectionRenderer.init(section:)","coverage":1},{"name":"FormSectionRenderer.renderFooterView()","coverage":1},{"name":"FormSectionRenderer.heightOfFooterView(in:)","coverage":1}]},{"name":"PostMultisendMessagesWithTokenRequest.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Messaging/Request/PostMultisendMessagesWithTokenRequest.swift","coverage":1,"type":"swift","functions":[{"name":"PostMultisendMessagesWithTokenRequest.init(token:messages:)","coverage":1},{"name":"closure #1 in PostMultisendMessagesWithTokenRequest.init(token:messages:)","coverage":1},{"name":"variable initialization expression of PostMultisendMessagesWithTokenRequest.method","coverage":1},{"name":"variable initialization expression of PostMultisendMessagesWithTokenRequest.path","coverage":1},{"name":"variable initialization expression of PostMultisendMessagesWithTokenRequest.authentication","coverage":1},{"name":"PostMultisendMessagesWithTokenRequest.parameters.getter","coverage":1}]},{"name":"OptionSelectingViewController.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/LineSDKUI/OpenChatUI/ViewControllers/OptionSelectingViewController.swift","coverage":1,"type":"swift","functions":[{"name":"variable initialization expression of OptionSelectingViewController.onSelected","coverage":1},{"name":"variable initialization expression of OptionSelectingViewController.data","coverage":1},{"name":"OptionSelectingViewController.cellResultIdentifier.getter","coverage":1},{"name":"OptionSelectingViewController.viewDidLoad()","coverage":1},{"name":"OptionSelectingViewController.setupNavigationBar()","coverage":1},{"name":"OptionSelectingViewController.closeCategory()","coverage":1},{"name":"OptionSelectingViewController.tableView(_:numberOfRowsInSection:)","coverage":1},{"name":"OptionSelectingViewController.tableView(_:cellForRowAt:)","coverage":1},{"name":"OptionSelectingViewController.tableView(_:didSelectRowAt:)","coverage":1},{"name":"static OptionSelectingViewController.createViewController(data:selected:)","coverage":1}]},{"name":"CryptoError.swift","path":"/Users/runner/work/line-sdk-ios-swift/line-sdk-ios-swift/LineSDK/LineSDK/Crypto/CryptoError.swift","coverage":1,"type":"swift","functions":[{"name":"CryptoError.AlgorithmsErrorReason.errorDescription.getter","coverage":1},{"name":"CryptoError.AlgorithmsErrorReason.errorCode.getter","coverage":1},{"name":"CryptoError.AlgorithmsErrorReason.errorUserInfo.getter","coverage":1},{"name":"closure #1 in CryptoError.AlgorithmsErrorReason.errorUserInfo.getter","coverage":1},{"name":"CryptoError.JWTErrorReason.errorDescription.getter","coverage":1},{"name":"CryptoError.JWTErrorReason.errorCode.getter","coverage":1},{"name":"CryptoError.JWTErrorReason.errorUserInfo.getter","coverage":1},{"name":"closure #1 in CryptoError.JWTErrorReason.errorUserInfo.getter","coverage":1},{"name":"CryptoError.JWKErrorReason.errorDescription.getter","coverage":1},{"name":"CryptoError.JWKErrorReason.errorCode.getter","coverage":1},{"name":"CryptoError.JWKErrorReason.errorUserInfo.getter","coverage":1},{"name":"closure #1 in CryptoError.JWKErrorReason.errorUserInfo.getter","coverage":1},{"name":"CryptoError.GeneralErrorReason.errorDescription.getter","coverage":1},{"name":"CryptoError.GeneralErrorReason.errorCode.getter","coverage":1},{"name":"CryptoError.GeneralErrorReason.errorUserInfo.getter","coverage":1},{"name":"closure #1 in CryptoError.GeneralErrorReason.errorUserInfo.getter","coverage":1},{"name":"CryptoError.errorDescription.getter","coverage":1},{"name":"CryptoError.errorUserInfo.getter","coverage":1},{"name":"CryptoError.errorCode.getter","coverage":1},{"name":"static CryptoError.errorDomain.getter","coverage":1}]}]}]}
